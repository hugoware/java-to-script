{
  "node": "CompilationUnit",
  "types": [
    {
      "node": "TypeDeclaration",
      "name": {
        "identifier": "AreaOp",
        "node": "SimpleName"
      },
      "superInterfaceTypes": [],
      "superclassType": null,
      "bodyDeclarations": [
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "CAGOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "AreaOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "node": "FieldDeclaration",
              "fragments": [
                {
                  "node": "VariableDeclarationFragment",
                  "name": {
                    "identifier": "inLeft",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "initializer": null
                }
              ],
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "modifiers": []
            },
            {
              "node": "FieldDeclaration",
              "fragments": [
                {
                  "node": "VariableDeclarationFragment",
                  "name": {
                    "identifier": "inRight",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "initializer": null
                }
              ],
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "modifiers": []
            },
            {
              "node": "FieldDeclaration",
              "fragments": [
                {
                  "node": "VariableDeclarationFragment",
                  "name": {
                    "identifier": "inResult",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "initializer": null
                }
              ],
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "modifiers": []
            },
            {
              "parameters": [],
              "thrownExceptions": [],
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "inLeft",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    }
                  },
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "inRight",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    }
                  },
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "inResult",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    }
                  }
                ]
              },
              "extraDimensions": 0,
              "typeParameters": [],
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "void"
              },
              "name": {
                "identifier": "newRow",
                "node": "SimpleName"
              },
              "constructor": false,
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "e",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "Edge",
                      "node": "SimpleName"
                    }
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "IfStatement",
                    "elseStatement": {
                      "node": "Block",
                      "statements": [
                        {
                          "node": "ExpressionStatement",
                          "expression": {
                            "node": "Assignment",
                            "operator": "=",
                            "leftHandSide": {
                              "identifier": "inRight",
                              "node": "SimpleName"
                            },
                            "rightHandSide": {
                              "node": "PrefixExpression",
                              "operator": "!",
                              "operand": {
                                "identifier": "inRight",
                                "node": "SimpleName"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "thenStatement": {
                      "node": "Block",
                      "statements": [
                        {
                          "node": "ExpressionStatement",
                          "expression": {
                            "node": "Assignment",
                            "operator": "=",
                            "leftHandSide": {
                              "identifier": "inLeft",
                              "node": "SimpleName"
                            },
                            "rightHandSide": {
                              "node": "PrefixExpression",
                              "operator": "!",
                              "operand": {
                                "identifier": "inLeft",
                                "node": "SimpleName"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "expression": {
                      "node": "InfixExpression",
                      "operator": "==",
                      "leftOperand": {
                        "name": {
                          "identifier": "getCurveTag",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "e",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [],
                        "typeArguments": []
                      },
                      "rightOperand": {
                        "identifier": "CTAG_LEFT",
                        "node": "SimpleName"
                      }
                    }
                  },
                  {
                    "node": "VariableDeclarationStatement",
                    "fragments": [
                      {
                        "node": "VariableDeclarationFragment",
                        "name": {
                          "identifier": "newClass",
                          "node": "SimpleName"
                        },
                        "extraDimensions": 0,
                        "initializer": {
                          "name": {
                            "identifier": "newClassification",
                            "node": "SimpleName"
                          },
                          "expression": null,
                          "node": "MethodInvocation",
                          "arguments": [
                            {
                              "identifier": "inLeft",
                              "node": "SimpleName"
                            },
                            {
                              "identifier": "inRight",
                              "node": "SimpleName"
                            }
                          ],
                          "typeArguments": []
                        }
                      }
                    ],
                    "modifiers": [],
                    "type": {
                      "node": "PrimitiveType",
                      "primitiveTypeCode": "boolean"
                    }
                  },
                  {
                    "node": "IfStatement",
                    "elseStatement": null,
                    "thenStatement": {
                      "node": "Block",
                      "statements": [
                        {
                          "node": "ReturnStatement",
                          "expression": {
                            "identifier": "ETAG_IGNORE",
                            "node": "SimpleName"
                          }
                        }
                      ]
                    },
                    "expression": {
                      "node": "InfixExpression",
                      "operator": "==",
                      "leftOperand": {
                        "identifier": "inResult",
                        "node": "SimpleName"
                      },
                      "rightOperand": {
                        "identifier": "newClass",
                        "node": "SimpleName"
                      }
                    }
                  },
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "inResult",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "identifier": "newClass",
                        "node": "SimpleName"
                      }
                    }
                  },
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "ConditionalExpression",
                        "expression": {
                          "identifier": "newClass",
                          "node": "SimpleName"
                        },
                        "thenExpression": {
                          "identifier": "ETAG_ENTER",
                          "node": "SimpleName"
                        },
                        "elseExpression": {
                          "identifier": "ETAG_EXIT",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "name": {
                "identifier": "classify",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "ConditionalExpression",
                        "expression": {
                          "identifier": "inResult",
                          "node": "SimpleName"
                        },
                        "thenExpression": {
                          "identifier": "RSTAG_INSIDE",
                          "node": "SimpleName"
                        },
                        "elseExpression": {
                          "identifier": "RSTAG_OUTSIDE",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "name": {
                "identifier": "getState",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inLeft",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                },
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inRight",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": null,
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "name": {
                "identifier": "newClassification",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                },
                {
                  "node": "Modifier",
                  "keyword": "abstract"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "abstract"
            }
          ]
        },
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "AddOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "CAGOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inLeft",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                },
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inRight",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "||",
                        "leftOperand": {
                          "identifier": "inLeft",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "inRight",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "name": {
                "identifier": "newClassification",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "SubOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "CAGOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inLeft",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                },
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inRight",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "&&",
                        "leftOperand": {
                          "identifier": "inLeft",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "node": "PrefixExpression",
                          "operator": "!",
                          "operand": {
                            "identifier": "inRight",
                            "node": "SimpleName"
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "name": {
                "identifier": "newClassification",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "IntOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "CAGOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inLeft",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                },
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inRight",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "&&",
                        "leftOperand": {
                          "identifier": "inLeft",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "inRight",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "name": {
                "identifier": "newClassification",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "XorOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "CAGOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inLeft",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                },
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "inRight",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "PrimitiveType",
                    "primitiveTypeCode": "boolean"
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "!=",
                        "leftOperand": {
                          "identifier": "inLeft",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "inRight",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "name": {
                "identifier": "newClassification",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "NZWindOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "AreaOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "node": "FieldDeclaration",
              "fragments": [
                {
                  "node": "VariableDeclarationFragment",
                  "name": {
                    "identifier": "count",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "initializer": null
                }
              ],
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "private"
                }
              ]
            },
            {
              "parameters": [],
              "thrownExceptions": [],
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "count",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "node": "NumberLiteral",
                        "token": "0"
                      }
                    }
                  }
                ]
              },
              "extraDimensions": 0,
              "typeParameters": [],
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "void"
              },
              "name": {
                "identifier": "newRow",
                "node": "SimpleName"
              },
              "constructor": false,
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "e",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "Edge",
                      "node": "SimpleName"
                    }
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "VariableDeclarationStatement",
                    "fragments": [
                      {
                        "node": "VariableDeclarationFragment",
                        "name": {
                          "identifier": "newCount",
                          "node": "SimpleName"
                        },
                        "extraDimensions": 0,
                        "initializer": {
                          "identifier": "count",
                          "node": "SimpleName"
                        }
                      }
                    ],
                    "modifiers": [],
                    "type": {
                      "node": "PrimitiveType",
                      "primitiveTypeCode": "int"
                    }
                  },
                  {
                    "node": "VariableDeclarationStatement",
                    "fragments": [
                      {
                        "node": "VariableDeclarationFragment",
                        "name": {
                          "identifier": "type",
                          "node": "SimpleName"
                        },
                        "extraDimensions": 0,
                        "initializer": {
                          "node": "ParenthesizedExpression",
                          "expression": {
                            "node": "ConditionalExpression",
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "==",
                              "leftOperand": {
                                "identifier": "newCount",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NumberLiteral",
                                "token": "0"
                              }
                            },
                            "thenExpression": {
                              "identifier": "ETAG_ENTER",
                              "node": "SimpleName"
                            },
                            "elseExpression": {
                              "identifier": "ETAG_IGNORE",
                              "node": "SimpleName"
                            }
                          }
                        }
                      }
                    ],
                    "modifiers": [],
                    "type": {
                      "node": "PrimitiveType",
                      "primitiveTypeCode": "int"
                    }
                  },
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "+=",
                      "leftHandSide": {
                        "identifier": "newCount",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "node": "MethodInvocation",
                        "arguments": [],
                        "name": {
                          "identifier": "getDirection",
                          "node": "SimpleName"
                        },
                        "typeArguments": [],
                        "expression": {
                          "name": {
                            "identifier": "getCurve",
                            "node": "SimpleName"
                          },
                          "expression": {
                            "identifier": "e",
                            "node": "SimpleName"
                          },
                          "node": "MethodInvocation",
                          "arguments": [],
                          "typeArguments": []
                        }
                      }
                    }
                  },
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "count",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "identifier": "newCount",
                        "node": "SimpleName"
                      }
                    }
                  },
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "ConditionalExpression",
                        "expression": {
                          "node": "InfixExpression",
                          "operator": "==",
                          "leftOperand": {
                            "identifier": "newCount",
                            "node": "SimpleName"
                          },
                          "rightOperand": {
                            "node": "NumberLiteral",
                            "token": "0"
                          }
                        },
                        "thenExpression": {
                          "identifier": "ETAG_EXIT",
                          "node": "SimpleName"
                        },
                        "elseExpression": {
                          "identifier": "type",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "name": {
                "identifier": "classify",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "ConditionalExpression",
                        "expression": {
                          "node": "ParenthesizedExpression",
                          "expression": {
                            "node": "InfixExpression",
                            "operator": "==",
                            "leftOperand": {
                              "identifier": "count",
                              "node": "SimpleName"
                            },
                            "rightOperand": {
                              "node": "NumberLiteral",
                              "token": "0"
                            }
                          }
                        },
                        "thenExpression": {
                          "identifier": "RSTAG_OUTSIDE",
                          "node": "SimpleName"
                        },
                        "elseExpression": {
                          "identifier": "RSTAG_INSIDE",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "name": {
                "identifier": "getState",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "TypeDeclaration",
          "name": {
            "identifier": "EOWindOp",
            "node": "SimpleName"
          },
          "superInterfaceTypes": [],
          "superclassType": {
            "node": "SimpleType",
            "name": {
              "identifier": "AreaOp",
              "node": "SimpleName"
            }
          },
          "bodyDeclarations": [
            {
              "node": "FieldDeclaration",
              "fragments": [
                {
                  "node": "VariableDeclarationFragment",
                  "name": {
                    "identifier": "inside",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "initializer": null
                }
              ],
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "boolean"
              },
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "private"
                }
              ]
            },
            {
              "parameters": [],
              "thrownExceptions": [],
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "inside",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    }
                  }
                ]
              },
              "extraDimensions": 0,
              "typeParameters": [],
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "void"
              },
              "name": {
                "identifier": "newRow",
                "node": "SimpleName"
              },
              "constructor": false,
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [
                {
                  "node": "SingleVariableDeclaration",
                  "name": {
                    "identifier": "e",
                    "node": "SimpleName"
                  },
                  "extraDimensions": 0,
                  "type": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "Edge",
                      "node": "SimpleName"
                    }
                  },
                  "modifiers": [],
                  "varargs": false,
                  "initializer": null
                }
              ],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "VariableDeclarationStatement",
                    "fragments": [
                      {
                        "node": "VariableDeclarationFragment",
                        "name": {
                          "identifier": "newInside",
                          "node": "SimpleName"
                        },
                        "extraDimensions": 0,
                        "initializer": {
                          "node": "PrefixExpression",
                          "operator": "!",
                          "operand": {
                            "identifier": "inside",
                            "node": "SimpleName"
                          }
                        }
                      }
                    ],
                    "modifiers": [],
                    "type": {
                      "node": "PrimitiveType",
                      "primitiveTypeCode": "boolean"
                    }
                  },
                  {
                    "node": "ExpressionStatement",
                    "expression": {
                      "node": "Assignment",
                      "operator": "=",
                      "leftHandSide": {
                        "identifier": "inside",
                        "node": "SimpleName"
                      },
                      "rightHandSide": {
                        "identifier": "newInside",
                        "node": "SimpleName"
                      }
                    }
                  },
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "ConditionalExpression",
                        "expression": {
                          "identifier": "newInside",
                          "node": "SimpleName"
                        },
                        "thenExpression": {
                          "identifier": "ETAG_ENTER",
                          "node": "SimpleName"
                        },
                        "elseExpression": {
                          "identifier": "ETAG_EXIT",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "name": {
                "identifier": "classify",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            },
            {
              "parameters": [],
              "thrownExceptions": [],
              "extraDimensions": 0,
              "body": {
                "node": "Block",
                "statements": [
                  {
                    "node": "ReturnStatement",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "ConditionalExpression",
                        "expression": {
                          "identifier": "inside",
                          "node": "SimpleName"
                        },
                        "thenExpression": {
                          "identifier": "RSTAG_INSIDE",
                          "node": "SimpleName"
                        },
                        "elseExpression": {
                          "identifier": "RSTAG_OUTSIDE",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                ]
              },
              "constructor": false,
              "node": "MethodDeclaration",
              "returnType2": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "name": {
                "identifier": "getState",
                "node": "SimpleName"
              },
              "typeParameters": [],
              "modifiers": [
                {
                  "node": "Modifier",
                  "keyword": "public"
                }
              ]
            }
          ],
          "typeParameters": [],
          "interface": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "parameters": [],
          "thrownExceptions": [],
          "body": {
            "node": "Block",
            "statements": []
          },
          "returnType2": null,
          "constructor": true,
          "extraDimensions": 0,
          "node": "MethodDeclaration",
          "name": {
            "identifier": "AreaOp",
            "node": "SimpleName"
          },
          "typeParameters": [],
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "private"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "CTAG_LEFT",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "NumberLiteral",
                "token": "0"
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "CTAG_RIGHT",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "NumberLiteral",
                "token": "1"
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "ETAG_IGNORE",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "NumberLiteral",
                "token": "0"
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "ETAG_ENTER",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "NumberLiteral",
                "token": "1"
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "ETAG_EXIT",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "PrefixExpression",
                "operator": "-",
                "operand": {
                  "node": "NumberLiteral",
                  "token": "1"
                }
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "RSTAG_INSIDE",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "NumberLiteral",
                "token": "1"
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "RSTAG_OUTSIDE",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "PrefixExpression",
                "operator": "-",
                "operand": {
                  "node": "NumberLiteral",
                  "token": "1"
                }
              }
            }
          ],
          "type": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            },
            {
              "node": "Modifier",
              "keyword": "final"
            }
          ]
        },
        {
          "parameters": [],
          "thrownExceptions": [],
          "body": null,
          "extraDimensions": 0,
          "typeParameters": [],
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "void"
          },
          "name": {
            "identifier": "newRow",
            "node": "SimpleName"
          },
          "constructor": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "abstract"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "e",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Edge",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "extraDimensions": 0,
          "body": null,
          "constructor": false,
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "name": {
            "identifier": "classify",
            "node": "SimpleName"
          },
          "typeParameters": [],
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "abstract"
            }
          ]
        },
        {
          "parameters": [],
          "thrownExceptions": [],
          "extraDimensions": 0,
          "body": null,
          "constructor": false,
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "int"
          },
          "name": {
            "identifier": "getState",
            "node": "SimpleName"
          },
          "typeParameters": [],
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "abstract"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "left",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "right",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "extraDimensions": 0,
          "body": {
            "node": "Block",
            "statements": [
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "edges",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "arguments": [],
                      "anonymousClassDeclaration": null,
                      "node": "ClassInstanceCreation",
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "Vector",
                          "node": "SimpleName"
                        }
                      },
                      "typeArguments": [],
                      "expression": null
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Vector",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "addEdges",
                    "node": "SimpleName"
                  },
                  "expression": null,
                  "node": "MethodInvocation",
                  "arguments": [
                    {
                      "identifier": "edges",
                      "node": "SimpleName"
                    },
                    {
                      "identifier": "left",
                      "node": "SimpleName"
                    },
                    {
                      "node": "QualifiedName",
                      "qualifier": {
                        "identifier": "AreaOp",
                        "node": "SimpleName"
                      },
                      "name": {
                        "identifier": "CTAG_LEFT",
                        "node": "SimpleName"
                      }
                    }
                  ],
                  "typeArguments": []
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "addEdges",
                    "node": "SimpleName"
                  },
                  "expression": null,
                  "node": "MethodInvocation",
                  "arguments": [
                    {
                      "identifier": "edges",
                      "node": "SimpleName"
                    },
                    {
                      "identifier": "right",
                      "node": "SimpleName"
                    },
                    {
                      "node": "QualifiedName",
                      "qualifier": {
                        "identifier": "AreaOp",
                        "node": "SimpleName"
                      },
                      "name": {
                        "identifier": "CTAG_RIGHT",
                        "node": "SimpleName"
                      }
                    }
                  ],
                  "typeArguments": []
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "node": "Assignment",
                  "operator": "=",
                  "leftHandSide": {
                    "identifier": "edges",
                    "node": "SimpleName"
                  },
                  "rightHandSide": {
                    "name": {
                      "identifier": "pruneEdges",
                      "node": "SimpleName"
                    },
                    "expression": null,
                    "node": "MethodInvocation",
                    "arguments": [
                      {
                        "identifier": "edges",
                        "node": "SimpleName"
                      }
                    ],
                    "typeArguments": []
                  }
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": null,
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "println",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "node": "QualifiedName",
                          "qualifier": {
                            "identifier": "System",
                            "node": "SimpleName"
                          },
                          "name": {
                            "identifier": "out",
                            "node": "SimpleName"
                          }
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "node": "StringLiteral",
                            "escapedValue": "\"result: \""
                          }
                        ],
                        "typeArguments": []
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "numcurves",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "name": {
                              "identifier": "size",
                              "node": "SimpleName"
                            },
                            "expression": {
                              "identifier": "edges",
                              "node": "SimpleName"
                            },
                            "node": "MethodInvocation",
                            "arguments": [],
                            "typeArguments": []
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "int"
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "curvelist",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "CastExpression",
                            "type": {
                              "node": "ArrayType",
                              "componentType": {
                                "node": "SimpleType",
                                "name": {
                                  "identifier": "Curve",
                                  "node": "SimpleName"
                                }
                              }
                            },
                            "expression": {
                              "name": {
                                "identifier": "toArray",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "edges",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "ArrayCreation",
                                  "type": {
                                    "node": "ArrayType",
                                    "componentType": {
                                      "node": "SimpleType",
                                      "name": {
                                        "identifier": "Curve",
                                        "node": "SimpleName"
                                      }
                                    }
                                  },
                                  "initializer": null,
                                  "dimensions": [
                                    {
                                      "identifier": "numcurves",
                                      "node": "SimpleName"
                                    }
                                  ]
                                }
                              ],
                              "typeArguments": []
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "ArrayType",
                        "componentType": {
                          "node": "SimpleType",
                          "name": {
                            "identifier": "Curve",
                            "node": "SimpleName"
                          }
                        }
                      }
                    },
                    {
                      "node": "ForStatement",
                      "initializers": [
                        {
                          "node": "VariableDeclarationExpression",
                          "modifiers": [],
                          "fragments": [
                            {
                              "node": "VariableDeclarationFragment",
                              "name": {
                                "identifier": "i",
                                "node": "SimpleName"
                              },
                              "extraDimensions": 0,
                              "initializer": {
                                "node": "NumberLiteral",
                                "token": "0"
                              }
                            }
                          ],
                          "type": {
                            "node": "PrimitiveType",
                            "primitiveTypeCode": "int"
                          }
                        }
                      ],
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "i",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "numcurves",
                          "node": "SimpleName"
                        }
                      },
                      "updaters": [
                        {
                          "node": "PostfixExpression",
                          "operator": "++",
                          "operand": {
                            "identifier": "i",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "InfixExpression",
                                    "operator": "+",
                                    "leftOperand": {
                                      "node": "InfixExpression",
                                      "operator": "+",
                                      "leftOperand": {
                                        "node": "StringLiteral",
                                        "escapedValue": "\"curvelist[\""
                                      },
                                      "rightOperand": {
                                        "identifier": "i",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "StringLiteral",
                                      "escapedValue": "\"] = \""
                                    }
                                  },
                                  "rightOperand": {
                                    "node": "ArrayAccess",
                                    "array": {
                                      "identifier": "curvelist",
                                      "node": "SimpleName"
                                    },
                                    "index": {
                                      "identifier": "i",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "BooleanLiteral",
                  "booleanValue": false
                }
              },
              {
                "node": "ReturnStatement",
                "expression": {
                  "identifier": "edges",
                  "node": "SimpleName"
                }
              }
            ]
          },
          "constructor": false,
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "SimpleType",
            "name": {
              "identifier": "Vector",
              "node": "SimpleName"
            }
          },
          "name": {
            "identifier": "calculate",
            "node": "SimpleName"
          },
          "typeParameters": [],
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "edges",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "curves",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "curvetag",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "body": {
            "node": "Block",
            "statements": [
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "enum_",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "name": {
                        "identifier": "elements",
                        "node": "SimpleName"
                      },
                      "expression": {
                        "identifier": "curves",
                        "node": "SimpleName"
                      },
                      "node": "MethodInvocation",
                      "arguments": [],
                      "typeArguments": []
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Enumeration",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "WhileStatement",
                "expression": {
                  "name": {
                    "identifier": "hasMoreElements",
                    "node": "SimpleName"
                  },
                  "expression": {
                    "identifier": "enum_",
                    "node": "SimpleName"
                  },
                  "node": "MethodInvocation",
                  "arguments": [],
                  "typeArguments": []
                },
                "body": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "c",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "CastExpression",
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "Curve",
                                "node": "SimpleName"
                              }
                            },
                            "expression": {
                              "name": {
                                "identifier": "nextElement",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "enum_",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [],
                              "typeArguments": []
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "Curve",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "add",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "edges",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "identifier": "c",
                                      "node": "SimpleName"
                                    },
                                    {
                                      "identifier": "curvetag",
                                      "node": "SimpleName"
                                    }
                                  ],
                                  "anonymousClassDeclaration": null,
                                  "node": "ClassInstanceCreation",
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "Edge",
                                      "node": "SimpleName"
                                    }
                                  },
                                  "typeArguments": [],
                                  "expression": null
                                }
                              ],
                              "typeArguments": []
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": ">",
                        "leftOperand": {
                          "name": {
                            "identifier": "getOrder",
                            "node": "SimpleName"
                          },
                          "expression": {
                            "identifier": "c",
                            "node": "SimpleName"
                          },
                          "node": "MethodInvocation",
                          "arguments": [],
                          "typeArguments": []
                        },
                        "rightOperand": {
                          "node": "NumberLiteral",
                          "token": "0"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extraDimensions": 0,
          "typeParameters": [],
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "void"
          },
          "name": {
            "identifier": "addEdges",
            "node": "SimpleName"
          },
          "constructor": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "private"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "YXTopComparator",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "arguments": [],
                "anonymousClassDeclaration": {
                  "node": "AnonymousClassDeclaration",
                  "bodyDeclarations": [
                    {
                      "parameters": [
                        {
                          "node": "SingleVariableDeclaration",
                          "name": {
                            "identifier": "o1",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "type": {
                            "node": "SimpleType",
                            "name": {
                              "identifier": "Object",
                              "node": "SimpleName"
                            }
                          },
                          "modifiers": [],
                          "varargs": false,
                          "initializer": null
                        },
                        {
                          "node": "SingleVariableDeclaration",
                          "name": {
                            "identifier": "o2",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "type": {
                            "node": "SimpleType",
                            "name": {
                              "identifier": "Object",
                              "node": "SimpleName"
                            }
                          },
                          "modifiers": [],
                          "varargs": false,
                          "initializer": null
                        }
                      ],
                      "thrownExceptions": [],
                      "extraDimensions": 0,
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "c1",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": {
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "name": {
                                    "identifier": "getCurve",
                                    "node": "SimpleName"
                                  },
                                  "typeArguments": [],
                                  "expression": {
                                    "node": "ParenthesizedExpression",
                                    "expression": {
                                      "node": "CastExpression",
                                      "type": {
                                        "node": "SimpleType",
                                        "name": {
                                          "identifier": "Edge",
                                          "node": "SimpleName"
                                        }
                                      },
                                      "expression": {
                                        "identifier": "o1",
                                        "node": "SimpleName"
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "Curve",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "c2",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": {
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "name": {
                                    "identifier": "getCurve",
                                    "node": "SimpleName"
                                  },
                                  "typeArguments": [],
                                  "expression": {
                                    "node": "ParenthesizedExpression",
                                    "expression": {
                                      "node": "CastExpression",
                                      "type": {
                                        "node": "SimpleType",
                                        "name": {
                                          "identifier": "Edge",
                                          "node": "SimpleName"
                                        }
                                      },
                                      "expression": {
                                        "identifier": "o2",
                                        "node": "SimpleName"
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "Curve",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "v1",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": null
                              },
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "v2",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": null
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "PrimitiveType",
                              "primitiveTypeCode": "double"
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "IfStatement",
                                  "elseStatement": null,
                                  "thenStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ReturnStatement",
                                        "expression": {
                                          "node": "NumberLiteral",
                                          "token": "0"
                                        }
                                      }
                                    ]
                                  },
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": "==",
                                    "leftOperand": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "Assignment",
                                        "operator": "=",
                                        "leftHandSide": {
                                          "identifier": "v1",
                                          "node": "SimpleName"
                                        },
                                        "rightHandSide": {
                                          "name": {
                                            "identifier": "getXTop",
                                            "node": "SimpleName"
                                          },
                                          "expression": {
                                            "identifier": "c1",
                                            "node": "SimpleName"
                                          },
                                          "node": "MethodInvocation",
                                          "arguments": [],
                                          "typeArguments": []
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "Assignment",
                                        "operator": "=",
                                        "leftHandSide": {
                                          "identifier": "v2",
                                          "node": "SimpleName"
                                        },
                                        "rightHandSide": {
                                          "name": {
                                            "identifier": "getXTop",
                                            "node": "SimpleName"
                                          },
                                          "expression": {
                                            "identifier": "c2",
                                            "node": "SimpleName"
                                          },
                                          "node": "MethodInvocation",
                                          "arguments": [],
                                          "typeArguments": []
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "==",
                              "leftOperand": {
                                "node": "ParenthesizedExpression",
                                "expression": {
                                  "node": "Assignment",
                                  "operator": "=",
                                  "leftHandSide": {
                                    "identifier": "v1",
                                    "node": "SimpleName"
                                  },
                                  "rightHandSide": {
                                    "name": {
                                      "identifier": "getYTop",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "c1",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [],
                                    "typeArguments": []
                                  }
                                }
                              },
                              "rightOperand": {
                                "node": "ParenthesizedExpression",
                                "expression": {
                                  "node": "Assignment",
                                  "operator": "=",
                                  "leftHandSide": {
                                    "identifier": "v2",
                                    "node": "SimpleName"
                                  },
                                  "rightHandSide": {
                                    "name": {
                                      "identifier": "getYTop",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "c2",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [],
                                    "typeArguments": []
                                  }
                                }
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ReturnStatement",
                                  "expression": {
                                    "node": "PrefixExpression",
                                    "operator": "-",
                                    "operand": {
                                      "node": "NumberLiteral",
                                      "token": "1"
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "<",
                              "leftOperand": {
                                "identifier": "v1",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "v2",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ReturnStatement",
                            "expression": {
                              "node": "NumberLiteral",
                              "token": "1"
                            }
                          }
                        ]
                      },
                      "constructor": false,
                      "node": "MethodDeclaration",
                      "returnType2": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "int"
                      },
                      "name": {
                        "identifier": "compare",
                        "node": "SimpleName"
                      },
                      "typeParameters": [],
                      "modifiers": [
                        {
                          "node": "Modifier",
                          "keyword": "public"
                        }
                      ]
                    }
                  ]
                },
                "node": "ClassInstanceCreation",
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Comparator",
                    "node": "SimpleName"
                  }
                },
                "typeArguments": [],
                "expression": null
              }
            }
          ],
          "type": {
            "node": "SimpleType",
            "name": {
              "identifier": "Comparator",
              "node": "SimpleName"
            }
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "private"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "edges",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "extraDimensions": 0,
          "body": {
            "node": "Block",
            "statements": [
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "numedges",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "name": {
                        "identifier": "size",
                        "node": "SimpleName"
                      },
                      "expression": {
                        "identifier": "edges",
                        "node": "SimpleName"
                      },
                      "node": "MethodInvocation",
                      "arguments": [],
                      "typeArguments": []
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": null,
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ReturnStatement",
                      "expression": {
                        "identifier": "edges",
                        "node": "SimpleName"
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "InfixExpression",
                  "operator": "<",
                  "leftOperand": {
                    "identifier": "numedges",
                    "node": "SimpleName"
                  },
                  "rightOperand": {
                    "node": "NumberLiteral",
                    "token": "2"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "edgelist",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "CastExpression",
                      "type": {
                        "node": "ArrayType",
                        "componentType": {
                          "node": "SimpleType",
                          "name": {
                            "identifier": "Edge",
                            "node": "SimpleName"
                          }
                        }
                      },
                      "expression": {
                        "name": {
                          "identifier": "toArray",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "edges",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "node": "ArrayCreation",
                            "type": {
                              "node": "ArrayType",
                              "componentType": {
                                "node": "SimpleType",
                                "name": {
                                  "identifier": "Edge",
                                  "node": "SimpleName"
                                }
                              }
                            },
                            "initializer": null,
                            "dimensions": [
                              {
                                "identifier": "numedges",
                                "node": "SimpleName"
                              }
                            ]
                          }
                        ],
                        "typeArguments": []
                      }
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "ArrayType",
                  "componentType": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "Edge",
                      "node": "SimpleName"
                    }
                  }
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "sort",
                    "node": "SimpleName"
                  },
                  "expression": {
                    "identifier": "Arrays",
                    "node": "SimpleName"
                  },
                  "node": "MethodInvocation",
                  "arguments": [
                    {
                      "identifier": "edgelist",
                      "node": "SimpleName"
                    },
                    {
                      "identifier": "YXTopComparator",
                      "node": "SimpleName"
                    }
                  ],
                  "typeArguments": []
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": null,
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "println",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "node": "QualifiedName",
                          "qualifier": {
                            "identifier": "System",
                            "node": "SimpleName"
                          },
                          "name": {
                            "identifier": "out",
                            "node": "SimpleName"
                          }
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "node": "StringLiteral",
                            "escapedValue": "\"pruning: \""
                          }
                        ],
                        "typeArguments": []
                      }
                    },
                    {
                      "node": "ForStatement",
                      "initializers": [
                        {
                          "node": "VariableDeclarationExpression",
                          "modifiers": [],
                          "fragments": [
                            {
                              "node": "VariableDeclarationFragment",
                              "name": {
                                "identifier": "i",
                                "node": "SimpleName"
                              },
                              "extraDimensions": 0,
                              "initializer": {
                                "node": "NumberLiteral",
                                "token": "0"
                              }
                            }
                          ],
                          "type": {
                            "node": "PrimitiveType",
                            "primitiveTypeCode": "int"
                          }
                        }
                      ],
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "i",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "numedges",
                          "node": "SimpleName"
                        }
                      },
                      "updaters": [
                        {
                          "node": "PostfixExpression",
                          "operator": "++",
                          "operand": {
                            "identifier": "i",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "InfixExpression",
                                    "operator": "+",
                                    "leftOperand": {
                                      "node": "InfixExpression",
                                      "operator": "+",
                                      "leftOperand": {
                                        "node": "StringLiteral",
                                        "escapedValue": "\"edgelist[\""
                                      },
                                      "rightOperand": {
                                        "identifier": "i",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "StringLiteral",
                                      "escapedValue": "\"] = \""
                                    }
                                  },
                                  "rightOperand": {
                                    "node": "ArrayAccess",
                                    "array": {
                                      "identifier": "edgelist",
                                      "node": "SimpleName"
                                    },
                                    "index": {
                                      "identifier": "i",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "BooleanLiteral",
                  "booleanValue": false
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "e",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": null
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Edge",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "left",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "NumberLiteral",
                      "token": "0"
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "right",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "NumberLiteral",
                      "token": "0"
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "cur",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "NumberLiteral",
                      "token": "0"
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "next",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "NumberLiteral",
                      "token": "0"
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "yrange",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 1,
                    "initializer": {
                      "node": "ArrayCreation",
                      "type": {
                        "node": "ArrayType",
                        "componentType": {
                          "node": "PrimitiveType",
                          "primitiveTypeCode": "double"
                        }
                      },
                      "initializer": null,
                      "dimensions": [
                        {
                          "node": "NumberLiteral",
                          "token": "2"
                        }
                      ]
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "double"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "subcurves",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "arguments": [],
                      "anonymousClassDeclaration": null,
                      "node": "ClassInstanceCreation",
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "Vector",
                          "node": "SimpleName"
                        }
                      },
                      "typeArguments": [],
                      "expression": null
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Vector",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "chains",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "arguments": [],
                      "anonymousClassDeclaration": null,
                      "node": "ClassInstanceCreation",
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "Vector",
                          "node": "SimpleName"
                        }
                      },
                      "typeArguments": [],
                      "expression": null
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Vector",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "links",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "arguments": [],
                      "anonymousClassDeclaration": null,
                      "node": "ClassInstanceCreation",
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "Vector",
                          "node": "SimpleName"
                        }
                      },
                      "typeArguments": [],
                      "expression": null
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Vector",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "WhileStatement",
                "expression": {
                  "node": "InfixExpression",
                  "operator": "<",
                  "leftOperand": {
                    "identifier": "left",
                    "node": "SimpleName"
                  },
                  "rightOperand": {
                    "identifier": "numedges",
                    "node": "SimpleName"
                  }
                },
                "body": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "y",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ArrayAccess",
                            "array": {
                              "identifier": "yrange",
                              "node": "SimpleName"
                            },
                            "index": {
                              "node": "NumberLiteral",
                              "token": "0"
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "double"
                      }
                    },
                    {
                      "node": "ForStatement",
                      "initializers": [
                        {
                          "node": "Assignment",
                          "operator": "=",
                          "leftHandSide": {
                            "identifier": "cur",
                            "node": "SimpleName"
                          },
                          "rightHandSide": {
                            "node": "Assignment",
                            "operator": "=",
                            "leftHandSide": {
                              "identifier": "next",
                              "node": "SimpleName"
                            },
                            "rightHandSide": {
                              "node": "InfixExpression",
                              "operator": "-",
                              "leftOperand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NumberLiteral",
                                "token": "1"
                              }
                            }
                          }
                        }
                      ],
                      "expression": {
                        "node": "InfixExpression",
                        "operator": ">=",
                        "leftOperand": {
                          "identifier": "cur",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "left",
                          "node": "SimpleName"
                        }
                      },
                      "updaters": [
                        {
                          "node": "PostfixExpression",
                          "operator": "--",
                          "operand": {
                            "identifier": "cur",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "e",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "edgelist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "IfStatement",
                                  "elseStatement": null,
                                  "thenStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ExpressionStatement",
                                        "expression": {
                                          "node": "Assignment",
                                          "operator": "=",
                                          "leftHandSide": {
                                            "node": "ArrayAccess",
                                            "array": {
                                              "identifier": "edgelist",
                                              "node": "SimpleName"
                                            },
                                            "index": {
                                              "identifier": "next",
                                              "node": "SimpleName"
                                            }
                                          },
                                          "rightHandSide": {
                                            "identifier": "e",
                                            "node": "SimpleName"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": ">",
                                    "leftOperand": {
                                      "identifier": "next",
                                      "node": "SimpleName"
                                    },
                                    "rightOperand": {
                                      "identifier": "cur",
                                      "node": "SimpleName"
                                    }
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "PostfixExpression",
                                    "operator": "--",
                                    "operand": {
                                      "identifier": "next",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": ">",
                              "leftOperand": {
                                "node": "MethodInvocation",
                                "arguments": [],
                                "name": {
                                  "identifier": "getYBot",
                                  "node": "SimpleName"
                                },
                                "typeArguments": [],
                                "expression": {
                                  "name": {
                                    "identifier": "getCurve",
                                    "node": "SimpleName"
                                  },
                                  "expression": {
                                    "identifier": "e",
                                    "node": "SimpleName"
                                  },
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "typeArguments": []
                                }
                              },
                              "rightOperand": {
                                "identifier": "y",
                                "node": "SimpleName"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "identifier": "left",
                          "node": "SimpleName"
                        },
                        "rightHandSide": {
                          "node": "InfixExpression",
                          "operator": "+",
                          "leftOperand": {
                            "identifier": "next",
                            "node": "SimpleName"
                          },
                          "rightOperand": {
                            "node": "NumberLiteral",
                            "token": "1"
                          }
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "BreakStatement",
                                  "label": null
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": ">=",
                              "leftOperand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "numedges",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "y",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "MethodInvocation",
                                "arguments": [],
                                "name": {
                                  "identifier": "getYTop",
                                  "node": "SimpleName"
                                },
                                "typeArguments": [],
                                "expression": {
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "name": {
                                    "identifier": "getCurve",
                                    "node": "SimpleName"
                                  },
                                  "typeArguments": [],
                                  "expression": {
                                    "node": "ArrayAccess",
                                    "array": {
                                      "identifier": "edgelist",
                                      "node": "SimpleName"
                                    },
                                    "index": {
                                      "identifier": "right",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "finalizeSubCurves",
                                      "node": "SimpleName"
                                    },
                                    "expression": null,
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "identifier": "subcurves",
                                        "node": "SimpleName"
                                      },
                                      {
                                        "identifier": "chains",
                                        "node": "SimpleName"
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": ">",
                              "leftOperand": {
                                "identifier": "y",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "yrange",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "NumberLiteral",
                                  "token": "0"
                                }
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "yrange",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "NumberLiteral",
                                  "token": "0"
                                }
                              },
                              "rightHandSide": {
                                "identifier": "y",
                                "node": "SimpleName"
                              }
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": ">=",
                        "leftOperand": {
                          "identifier": "left",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "right",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "WhileStatement",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "right",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "numedges",
                          "node": "SimpleName"
                        }
                      },
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "e",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "edgelist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "right",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "BreakStatement",
                                  "label": null
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": ">",
                              "leftOperand": {
                                "node": "MethodInvocation",
                                "arguments": [],
                                "name": {
                                  "identifier": "getYTop",
                                  "node": "SimpleName"
                                },
                                "typeArguments": [],
                                "expression": {
                                  "name": {
                                    "identifier": "getCurve",
                                    "node": "SimpleName"
                                  },
                                  "expression": {
                                    "identifier": "e",
                                    "node": "SimpleName"
                                  },
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "typeArguments": []
                                }
                              },
                              "rightOperand": {
                                "identifier": "y",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "PostfixExpression",
                              "operator": "++",
                              "operand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "node": "ArrayAccess",
                          "array": {
                            "identifier": "yrange",
                            "node": "SimpleName"
                          },
                          "index": {
                            "node": "NumberLiteral",
                            "token": "1"
                          }
                        },
                        "rightHandSide": {
                          "node": "MethodInvocation",
                          "arguments": [],
                          "name": {
                            "identifier": "getYBot",
                            "node": "SimpleName"
                          },
                          "typeArguments": [],
                          "expression": {
                            "node": "MethodInvocation",
                            "arguments": [],
                            "name": {
                              "identifier": "getCurve",
                              "node": "SimpleName"
                            },
                            "typeArguments": [],
                            "expression": {
                              "node": "ArrayAccess",
                              "array": {
                                "identifier": "edgelist",
                                "node": "SimpleName"
                              },
                              "index": {
                                "identifier": "left",
                                "node": "SimpleName"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "y",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "MethodInvocation",
                                "arguments": [],
                                "name": {
                                  "identifier": "getYTop",
                                  "node": "SimpleName"
                                },
                                "typeArguments": [],
                                "expression": {
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "name": {
                                    "identifier": "getCurve",
                                    "node": "SimpleName"
                                  },
                                  "typeArguments": [],
                                  "expression": {
                                    "node": "ArrayAccess",
                                    "array": {
                                      "identifier": "edgelist",
                                      "node": "SimpleName"
                                    },
                                    "index": {
                                      "identifier": "right",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "yrange",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "node": "NumberLiteral",
                                        "token": "1"
                                      }
                                    },
                                    "rightHandSide": {
                                      "identifier": "y",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": ">",
                              "leftOperand": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "yrange",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "NumberLiteral",
                                  "token": "1"
                                }
                              },
                              "rightOperand": {
                                "identifier": "y",
                                "node": "SimpleName"
                              }
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "right",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "numedges",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "InfixExpression",
                                    "operator": "+",
                                    "leftOperand": {
                                      "node": "InfixExpression",
                                      "operator": "+",
                                      "leftOperand": {
                                        "node": "InfixExpression",
                                        "operator": "+",
                                        "leftOperand": {
                                          "node": "StringLiteral",
                                          "escapedValue": "\"current line: y = [\""
                                        },
                                        "rightOperand": {
                                          "node": "ArrayAccess",
                                          "array": {
                                            "identifier": "yrange",
                                            "node": "SimpleName"
                                          },
                                          "index": {
                                            "node": "NumberLiteral",
                                            "token": "0"
                                          }
                                        }
                                      },
                                      "rightOperand": {
                                        "node": "StringLiteral",
                                        "escapedValue": "\", \""
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "yrange",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "node": "NumberLiteral",
                                        "token": "1"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "node": "StringLiteral",
                                    "escapedValue": "\"]\""
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ForStatement",
                            "initializers": [
                              {
                                "node": "Assignment",
                                "operator": "=",
                                "leftHandSide": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                },
                                "rightHandSide": {
                                  "identifier": "left",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "<",
                              "leftOperand": {
                                "identifier": "cur",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              }
                            },
                            "updaters": [
                              {
                                "node": "PostfixExpression",
                                "operator": "++",
                                "operand": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "body": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "println",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "node": "QualifiedName",
                                      "qualifier": {
                                        "identifier": "System",
                                        "node": "SimpleName"
                                      },
                                      "name": {
                                        "identifier": "out",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "node": "InfixExpression",
                                        "operator": "+",
                                        "leftOperand": {
                                          "node": "StringLiteral",
                                          "escapedValue": "\"  \""
                                        },
                                        "rightOperand": {
                                          "node": "ArrayAccess",
                                          "array": {
                                            "identifier": "edgelist",
                                            "node": "SimpleName"
                                          },
                                          "index": {
                                            "identifier": "cur",
                                            "node": "SimpleName"
                                          }
                                        }
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "nexteq",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "NumberLiteral",
                            "token": "1"
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "int"
                      }
                    },
                    {
                      "node": "ForStatement",
                      "initializers": [
                        {
                          "node": "Assignment",
                          "operator": "=",
                          "leftHandSide": {
                            "identifier": "cur",
                            "node": "SimpleName"
                          },
                          "rightHandSide": {
                            "identifier": "left",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "cur",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "right",
                          "node": "SimpleName"
                        }
                      },
                      "updaters": [
                        {
                          "node": "PostfixExpression",
                          "operator": "++",
                          "operand": {
                            "identifier": "cur",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "e",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "edgelist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "setEquivalence",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "e",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "NumberLiteral",
                                  "token": "0"
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ForStatement",
                            "initializers": [
                              {
                                "node": "Assignment",
                                "operator": "=",
                                "leftHandSide": {
                                  "identifier": "next",
                                  "node": "SimpleName"
                                },
                                "rightHandSide": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "expression": {
                              "node": "InfixExpression",
                              "operator": ">",
                              "leftOperand": {
                                "identifier": "next",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "left",
                                "node": "SimpleName"
                              }
                            },
                            "updaters": [
                              {
                                "node": "PostfixExpression",
                                "operator": "--",
                                "operand": {
                                  "identifier": "next",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "body": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "prevedge",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "node": "ArrayAccess",
                                        "array": {
                                          "identifier": "edgelist",
                                          "node": "SimpleName"
                                        },
                                        "index": {
                                          "node": "InfixExpression",
                                          "operator": "-",
                                          "leftOperand": {
                                            "identifier": "next",
                                            "node": "SimpleName"
                                          },
                                          "rightOperand": {
                                            "node": "NumberLiteral",
                                            "token": "1"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "Edge",
                                      "node": "SimpleName"
                                    }
                                  }
                                },
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "ordering",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "name": {
                                          "identifier": "compareTo",
                                          "node": "SimpleName"
                                        },
                                        "expression": {
                                          "identifier": "e",
                                          "node": "SimpleName"
                                        },
                                        "node": "MethodInvocation",
                                        "arguments": [
                                          {
                                            "identifier": "prevedge",
                                            "node": "SimpleName"
                                          },
                                          {
                                            "identifier": "yrange",
                                            "node": "SimpleName"
                                          }
                                        ],
                                        "typeArguments": []
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "PrimitiveType",
                                    "primitiveTypeCode": "int"
                                  }
                                },
                                {
                                  "node": "IfStatement",
                                  "elseStatement": null,
                                  "thenStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ThrowStatement",
                                        "expression": {
                                          "arguments": [
                                            {
                                              "node": "InfixExpression",
                                              "operator": "+",
                                              "leftOperand": {
                                                "node": "InfixExpression",
                                                "operator": "+",
                                                "leftOperand": {
                                                  "node": "InfixExpression",
                                                  "operator": "+",
                                                  "leftOperand": {
                                                    "node": "StringLiteral",
                                                    "escapedValue": "\"backstepping to \""
                                                  },
                                                  "rightOperand": {
                                                    "node": "ArrayAccess",
                                                    "array": {
                                                      "identifier": "yrange",
                                                      "node": "SimpleName"
                                                    },
                                                    "index": {
                                                      "node": "NumberLiteral",
                                                      "token": "1"
                                                    }
                                                  }
                                                },
                                                "rightOperand": {
                                                  "node": "StringLiteral",
                                                  "escapedValue": "\" from \""
                                                }
                                              },
                                              "rightOperand": {
                                                "node": "ArrayAccess",
                                                "array": {
                                                  "identifier": "yrange",
                                                  "node": "SimpleName"
                                                },
                                                "index": {
                                                  "node": "NumberLiteral",
                                                  "token": "0"
                                                }
                                              }
                                            }
                                          ],
                                          "anonymousClassDeclaration": null,
                                          "node": "ClassInstanceCreation",
                                          "type": {
                                            "node": "SimpleType",
                                            "name": {
                                              "identifier": "InternalError",
                                              "node": "SimpleName"
                                            }
                                          },
                                          "typeArguments": [],
                                          "expression": null
                                        }
                                      }
                                    ]
                                  },
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": "<=",
                                    "leftOperand": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "yrange",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "node": "NumberLiteral",
                                        "token": "1"
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "yrange",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "node": "NumberLiteral",
                                        "token": "0"
                                      }
                                    }
                                  }
                                },
                                {
                                  "node": "IfStatement",
                                  "elseStatement": null,
                                  "thenStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "IfStatement",
                                        "elseStatement": null,
                                        "thenStatement": {
                                          "node": "Block",
                                          "statements": [
                                            {
                                              "node": "VariableDeclarationStatement",
                                              "fragments": [
                                                {
                                                  "node": "VariableDeclarationFragment",
                                                  "name": {
                                                    "identifier": "eq",
                                                    "node": "SimpleName"
                                                  },
                                                  "extraDimensions": 0,
                                                  "initializer": {
                                                    "name": {
                                                      "identifier": "getEquivalence",
                                                      "node": "SimpleName"
                                                    },
                                                    "expression": {
                                                      "identifier": "prevedge",
                                                      "node": "SimpleName"
                                                    },
                                                    "node": "MethodInvocation",
                                                    "arguments": [],
                                                    "typeArguments": []
                                                  }
                                                }
                                              ],
                                              "modifiers": [],
                                              "type": {
                                                "node": "PrimitiveType",
                                                "primitiveTypeCode": "int"
                                              }
                                            },
                                            {
                                              "node": "IfStatement",
                                              "elseStatement": null,
                                              "thenStatement": {
                                                "node": "Block",
                                                "statements": [
                                                  {
                                                    "node": "ExpressionStatement",
                                                    "expression": {
                                                      "node": "Assignment",
                                                      "operator": "=",
                                                      "leftHandSide": {
                                                        "identifier": "eq",
                                                        "node": "SimpleName"
                                                      },
                                                      "rightHandSide": {
                                                        "node": "PostfixExpression",
                                                        "operator": "++",
                                                        "operand": {
                                                          "identifier": "nexteq",
                                                          "node": "SimpleName"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "node": "ExpressionStatement",
                                                    "expression": {
                                                      "name": {
                                                        "identifier": "setEquivalence",
                                                        "node": "SimpleName"
                                                      },
                                                      "expression": {
                                                        "identifier": "prevedge",
                                                        "node": "SimpleName"
                                                      },
                                                      "node": "MethodInvocation",
                                                      "arguments": [
                                                        {
                                                          "identifier": "eq",
                                                          "node": "SimpleName"
                                                        }
                                                      ],
                                                      "typeArguments": []
                                                    }
                                                  }
                                                ]
                                              },
                                              "expression": {
                                                "node": "InfixExpression",
                                                "operator": "==",
                                                "leftOperand": {
                                                  "identifier": "eq",
                                                  "node": "SimpleName"
                                                },
                                                "rightOperand": {
                                                  "node": "NumberLiteral",
                                                  "token": "0"
                                                }
                                              }
                                            },
                                            {
                                              "node": "ExpressionStatement",
                                              "expression": {
                                                "name": {
                                                  "identifier": "setEquivalence",
                                                  "node": "SimpleName"
                                                },
                                                "expression": {
                                                  "identifier": "e",
                                                  "node": "SimpleName"
                                                },
                                                "node": "MethodInvocation",
                                                "arguments": [
                                                  {
                                                    "identifier": "eq",
                                                    "node": "SimpleName"
                                                  }
                                                ],
                                                "typeArguments": []
                                              }
                                            }
                                          ]
                                        },
                                        "expression": {
                                          "node": "InfixExpression",
                                          "operator": "==",
                                          "leftOperand": {
                                            "identifier": "ordering",
                                            "node": "SimpleName"
                                          },
                                          "rightOperand": {
                                            "node": "NumberLiteral",
                                            "token": "0"
                                          }
                                        }
                                      },
                                      {
                                        "node": "BreakStatement",
                                        "label": null
                                      }
                                    ]
                                  },
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": ">=",
                                    "leftOperand": {
                                      "identifier": "ordering",
                                      "node": "SimpleName"
                                    },
                                    "rightOperand": {
                                      "node": "NumberLiteral",
                                      "token": "0"
                                    }
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "edgelist",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "identifier": "next",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "rightHandSide": {
                                      "identifier": "prevedge",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "edgelist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "next",
                                  "node": "SimpleName"
                                }
                              },
                              "rightHandSide": {
                                "identifier": "e",
                                "node": "SimpleName"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "InfixExpression",
                                    "operator": "+",
                                    "leftOperand": {
                                      "node": "InfixExpression",
                                      "operator": "+",
                                      "leftOperand": {
                                        "node": "InfixExpression",
                                        "operator": "+",
                                        "leftOperand": {
                                          "node": "StringLiteral",
                                          "escapedValue": "\"current sorted line: y = [\""
                                        },
                                        "rightOperand": {
                                          "node": "ArrayAccess",
                                          "array": {
                                            "identifier": "yrange",
                                            "node": "SimpleName"
                                          },
                                          "index": {
                                            "node": "NumberLiteral",
                                            "token": "0"
                                          }
                                        }
                                      },
                                      "rightOperand": {
                                        "node": "StringLiteral",
                                        "escapedValue": "\", \""
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "yrange",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "node": "NumberLiteral",
                                        "token": "1"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "node": "StringLiteral",
                                    "escapedValue": "\"]\""
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ForStatement",
                            "initializers": [
                              {
                                "node": "Assignment",
                                "operator": "=",
                                "leftHandSide": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                },
                                "rightHandSide": {
                                  "identifier": "left",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "<",
                              "leftOperand": {
                                "identifier": "cur",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              }
                            },
                            "updaters": [
                              {
                                "node": "PostfixExpression",
                                "operator": "++",
                                "operand": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "body": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "println",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "node": "QualifiedName",
                                      "qualifier": {
                                        "identifier": "System",
                                        "node": "SimpleName"
                                      },
                                      "name": {
                                        "identifier": "out",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "node": "InfixExpression",
                                        "operator": "+",
                                        "leftOperand": {
                                          "node": "StringLiteral",
                                          "escapedValue": "\"  \""
                                        },
                                        "rightOperand": {
                                          "node": "ArrayAccess",
                                          "array": {
                                            "identifier": "edgelist",
                                            "node": "SimpleName"
                                          },
                                          "index": {
                                            "identifier": "cur",
                                            "node": "SimpleName"
                                          }
                                        }
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "newRow",
                          "node": "SimpleName"
                        },
                        "expression": null,
                        "node": "MethodInvocation",
                        "arguments": [],
                        "typeArguments": []
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "ystart",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ArrayAccess",
                            "array": {
                              "identifier": "yrange",
                              "node": "SimpleName"
                            },
                            "index": {
                              "node": "NumberLiteral",
                              "token": "0"
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "double"
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "yend",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ArrayAccess",
                            "array": {
                              "identifier": "yrange",
                              "node": "SimpleName"
                            },
                            "index": {
                              "node": "NumberLiteral",
                              "token": "1"
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "double"
                      }
                    },
                    {
                      "node": "ForStatement",
                      "initializers": [
                        {
                          "node": "Assignment",
                          "operator": "=",
                          "leftHandSide": {
                            "identifier": "cur",
                            "node": "SimpleName"
                          },
                          "rightHandSide": {
                            "identifier": "left",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "cur",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "right",
                          "node": "SimpleName"
                        }
                      },
                      "updaters": [
                        {
                          "node": "PostfixExpression",
                          "operator": "++",
                          "operand": {
                            "identifier": "cur",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "e",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "edgelist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          },
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "etag",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": null
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "PrimitiveType",
                              "primitiveTypeCode": "int"
                            }
                          },
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "eq",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": {
                                  "name": {
                                    "identifier": "getEquivalence",
                                    "node": "SimpleName"
                                  },
                                  "expression": {
                                    "identifier": "e",
                                    "node": "SimpleName"
                                  },
                                  "node": "MethodInvocation",
                                  "arguments": [],
                                  "typeArguments": []
                                }
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "PrimitiveType",
                              "primitiveTypeCode": "int"
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "identifier": "etag",
                                      "node": "SimpleName"
                                    },
                                    "rightHandSide": {
                                      "name": {
                                        "identifier": "classify",
                                        "node": "SimpleName"
                                      },
                                      "expression": null,
                                      "node": "MethodInvocation",
                                      "arguments": [
                                        {
                                          "identifier": "e",
                                          "node": "SimpleName"
                                        }
                                      ],
                                      "typeArguments": []
                                    }
                                  }
                                }
                              ]
                            },
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "origstate",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "name": {
                                          "identifier": "getState",
                                          "node": "SimpleName"
                                        },
                                        "expression": null,
                                        "node": "MethodInvocation",
                                        "arguments": [],
                                        "typeArguments": []
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "PrimitiveType",
                                    "primitiveTypeCode": "int"
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "identifier": "etag",
                                      "node": "SimpleName"
                                    },
                                    "rightHandSide": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "ConditionalExpression",
                                        "expression": {
                                          "node": "InfixExpression",
                                          "operator": "==",
                                          "leftOperand": {
                                            "identifier": "origstate",
                                            "node": "SimpleName"
                                          },
                                          "rightOperand": {
                                            "node": "QualifiedName",
                                            "qualifier": {
                                              "identifier": "AreaOp",
                                              "node": "SimpleName"
                                            },
                                            "name": {
                                              "identifier": "RSTAG_INSIDE",
                                              "node": "SimpleName"
                                            }
                                          }
                                        },
                                        "thenExpression": {
                                          "node": "QualifiedName",
                                          "qualifier": {
                                            "identifier": "AreaOp",
                                            "node": "SimpleName"
                                          },
                                          "name": {
                                            "identifier": "ETAG_EXIT",
                                            "node": "SimpleName"
                                          }
                                        },
                                        "elseExpression": {
                                          "node": "QualifiedName",
                                          "qualifier": {
                                            "identifier": "AreaOp",
                                            "node": "SimpleName"
                                          },
                                          "name": {
                                            "identifier": "ETAG_ENTER",
                                            "node": "SimpleName"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "activematch",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "node": "NullLiteral"
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "Edge",
                                      "node": "SimpleName"
                                    }
                                  }
                                },
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "longestmatch",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "identifier": "e",
                                        "node": "SimpleName"
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "Edge",
                                      "node": "SimpleName"
                                    }
                                  }
                                },
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "furthesty",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "identifier": "yend",
                                        "node": "SimpleName"
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "PrimitiveType",
                                    "primitiveTypeCode": "double"
                                  }
                                },
                                {
                                  "node": "DoStatement",
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": "&&",
                                    "leftOperand": {
                                      "node": "InfixExpression",
                                      "operator": "<",
                                      "leftOperand": {
                                        "node": "PrefixExpression",
                                        "operator": "++",
                                        "operand": {
                                          "identifier": "cur",
                                          "node": "SimpleName"
                                        }
                                      },
                                      "rightOperand": {
                                        "identifier": "right",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "InfixExpression",
                                      "operator": "==",
                                      "leftOperand": {
                                        "node": "MethodInvocation",
                                        "arguments": [],
                                        "name": {
                                          "identifier": "getEquivalence",
                                          "node": "SimpleName"
                                        },
                                        "typeArguments": [],
                                        "expression": {
                                          "node": "ParenthesizedExpression",
                                          "expression": {
                                            "node": "Assignment",
                                            "operator": "=",
                                            "leftHandSide": {
                                              "identifier": "e",
                                              "node": "SimpleName"
                                            },
                                            "rightHandSide": {
                                              "node": "ArrayAccess",
                                              "array": {
                                                "identifier": "edgelist",
                                                "node": "SimpleName"
                                              },
                                              "index": {
                                                "identifier": "cur",
                                                "node": "SimpleName"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rightOperand": {
                                        "identifier": "eq",
                                        "node": "SimpleName"
                                      }
                                    }
                                  },
                                  "body": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ExpressionStatement",
                                        "expression": {
                                          "name": {
                                            "identifier": "classify",
                                            "node": "SimpleName"
                                          },
                                          "expression": null,
                                          "node": "MethodInvocation",
                                          "arguments": [
                                            {
                                              "identifier": "e",
                                              "node": "SimpleName"
                                            }
                                          ],
                                          "typeArguments": []
                                        }
                                      },
                                      {
                                        "node": "IfStatement",
                                        "elseStatement": null,
                                        "thenStatement": {
                                          "node": "Block",
                                          "statements": [
                                            {
                                              "node": "ExpressionStatement",
                                              "expression": {
                                                "node": "Assignment",
                                                "operator": "=",
                                                "leftHandSide": {
                                                  "identifier": "activematch",
                                                  "node": "SimpleName"
                                                },
                                                "rightHandSide": {
                                                  "identifier": "e",
                                                  "node": "SimpleName"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "expression": {
                                          "node": "InfixExpression",
                                          "operator": "&&",
                                          "leftOperand": {
                                            "node": "InfixExpression",
                                            "operator": "==",
                                            "leftOperand": {
                                              "identifier": "activematch",
                                              "node": "SimpleName"
                                            },
                                            "rightOperand": {
                                              "node": "NullLiteral"
                                            }
                                          },
                                          "rightOperand": {
                                            "name": {
                                              "identifier": "isActiveFor",
                                              "node": "SimpleName"
                                            },
                                            "expression": {
                                              "identifier": "e",
                                              "node": "SimpleName"
                                            },
                                            "node": "MethodInvocation",
                                            "arguments": [
                                              {
                                                "identifier": "ystart",
                                                "node": "SimpleName"
                                              },
                                              {
                                                "identifier": "etag",
                                                "node": "SimpleName"
                                              }
                                            ],
                                            "typeArguments": []
                                          }
                                        }
                                      },
                                      {
                                        "node": "ExpressionStatement",
                                        "expression": {
                                          "node": "Assignment",
                                          "operator": "=",
                                          "leftHandSide": {
                                            "identifier": "y",
                                            "node": "SimpleName"
                                          },
                                          "rightHandSide": {
                                            "node": "MethodInvocation",
                                            "arguments": [],
                                            "name": {
                                              "identifier": "getYBot",
                                              "node": "SimpleName"
                                            },
                                            "typeArguments": [],
                                            "expression": {
                                              "name": {
                                                "identifier": "getCurve",
                                                "node": "SimpleName"
                                              },
                                              "expression": {
                                                "identifier": "e",
                                                "node": "SimpleName"
                                              },
                                              "node": "MethodInvocation",
                                              "arguments": [],
                                              "typeArguments": []
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "node": "IfStatement",
                                        "elseStatement": null,
                                        "thenStatement": {
                                          "node": "Block",
                                          "statements": [
                                            {
                                              "node": "ExpressionStatement",
                                              "expression": {
                                                "node": "Assignment",
                                                "operator": "=",
                                                "leftHandSide": {
                                                  "identifier": "longestmatch",
                                                  "node": "SimpleName"
                                                },
                                                "rightHandSide": {
                                                  "identifier": "e",
                                                  "node": "SimpleName"
                                                }
                                              }
                                            },
                                            {
                                              "node": "ExpressionStatement",
                                              "expression": {
                                                "node": "Assignment",
                                                "operator": "=",
                                                "leftHandSide": {
                                                  "identifier": "furthesty",
                                                  "node": "SimpleName"
                                                },
                                                "rightHandSide": {
                                                  "identifier": "y",
                                                  "node": "SimpleName"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "expression": {
                                          "node": "InfixExpression",
                                          "operator": ">",
                                          "leftOperand": {
                                            "identifier": "y",
                                            "node": "SimpleName"
                                          },
                                          "rightOperand": {
                                            "identifier": "furthesty",
                                            "node": "SimpleName"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "PrefixExpression",
                                    "operator": "--",
                                    "operand": {
                                      "identifier": "cur",
                                      "node": "SimpleName"
                                    }
                                  }
                                },
                                {
                                  "node": "IfStatement",
                                  "elseStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ExpressionStatement",
                                        "expression": {
                                          "node": "Assignment",
                                          "operator": "=",
                                          "leftHandSide": {
                                            "identifier": "e",
                                            "node": "SimpleName"
                                          },
                                          "rightHandSide": {
                                            "node": "ParenthesizedExpression",
                                            "expression": {
                                              "node": "ConditionalExpression",
                                              "expression": {
                                                "node": "InfixExpression",
                                                "operator": "!=",
                                                "leftOperand": {
                                                  "identifier": "activematch",
                                                  "node": "SimpleName"
                                                },
                                                "rightOperand": {
                                                  "node": "NullLiteral"
                                                }
                                              },
                                              "thenExpression": {
                                                "identifier": "activematch",
                                                "node": "SimpleName"
                                              },
                                              "elseExpression": {
                                                "identifier": "longestmatch",
                                                "node": "SimpleName"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "thenStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ExpressionStatement",
                                        "expression": {
                                          "node": "Assignment",
                                          "operator": "=",
                                          "leftHandSide": {
                                            "identifier": "etag",
                                            "node": "SimpleName"
                                          },
                                          "rightHandSide": {
                                            "node": "QualifiedName",
                                            "qualifier": {
                                              "identifier": "AreaOp",
                                              "node": "SimpleName"
                                            },
                                            "name": {
                                              "identifier": "ETAG_IGNORE",
                                              "node": "SimpleName"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": "==",
                                    "leftOperand": {
                                      "name": {
                                        "identifier": "getState",
                                        "node": "SimpleName"
                                      },
                                      "expression": null,
                                      "node": "MethodInvocation",
                                      "arguments": [],
                                      "typeArguments": []
                                    },
                                    "rightOperand": {
                                      "identifier": "origstate",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "!=",
                              "leftOperand": {
                                "identifier": "eq",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NumberLiteral",
                                "token": "0"
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "record",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "e",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "identifier": "yend",
                                        "node": "SimpleName"
                                      },
                                      {
                                        "identifier": "etag",
                                        "node": "SimpleName"
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "add",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "links",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": {
                                              "identifier": "getCurve",
                                              "node": "SimpleName"
                                            },
                                            "expression": {
                                              "identifier": "e",
                                              "node": "SimpleName"
                                            },
                                            "node": "MethodInvocation",
                                            "arguments": [],
                                            "typeArguments": []
                                          },
                                          {
                                            "identifier": "ystart",
                                            "node": "SimpleName"
                                          },
                                          {
                                            "identifier": "yend",
                                            "node": "SimpleName"
                                          },
                                          {
                                            "identifier": "etag",
                                            "node": "SimpleName"
                                          }
                                        ],
                                        "anonymousClassDeclaration": null,
                                        "node": "ClassInstanceCreation",
                                        "type": {
                                          "node": "SimpleType",
                                          "name": {
                                            "identifier": "CurveLink",
                                            "node": "SimpleName"
                                          }
                                        },
                                        "typeArguments": [],
                                        "expression": null
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "!=",
                              "leftOperand": {
                                "identifier": "etag",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "AreaOp",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "ETAG_IGNORE",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "StringLiteral",
                                  "escapedValue": "\"Still inside at end of active edge list!\""
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "StringLiteral",
                                    "escapedValue": "\"num curves = \""
                                  },
                                  "rightOperand": {
                                    "node": "ParenthesizedExpression",
                                    "expression": {
                                      "node": "InfixExpression",
                                      "operator": "-",
                                      "leftOperand": {
                                        "identifier": "right",
                                        "node": "SimpleName"
                                      },
                                      "rightOperand": {
                                        "identifier": "left",
                                        "node": "SimpleName"
                                      }
                                    }
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "StringLiteral",
                                    "escapedValue": "\"num links = \""
                                  },
                                  "rightOperand": {
                                    "name": {
                                      "identifier": "size",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "links",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [],
                                    "typeArguments": []
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "node": "StringLiteral",
                                    "escapedValue": "\"y top = \""
                                  },
                                  "rightOperand": {
                                    "node": "ArrayAccess",
                                    "array": {
                                      "identifier": "yrange",
                                      "node": "SimpleName"
                                    },
                                    "index": {
                                      "node": "NumberLiteral",
                                      "token": "0"
                                    }
                                  }
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "println",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "node": "QualifiedName",
                                      "qualifier": {
                                        "identifier": "System",
                                        "node": "SimpleName"
                                      },
                                      "name": {
                                        "identifier": "out",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "node": "StringLiteral",
                                        "escapedValue": "\"no more curves\""
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            },
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "println",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "node": "QualifiedName",
                                      "qualifier": {
                                        "identifier": "System",
                                        "node": "SimpleName"
                                      },
                                      "name": {
                                        "identifier": "out",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "node": "InfixExpression",
                                        "operator": "+",
                                        "leftOperand": {
                                          "node": "StringLiteral",
                                          "escapedValue": "\"y top of next curve = \""
                                        },
                                        "rightOperand": {
                                          "node": "MethodInvocation",
                                          "arguments": [],
                                          "name": {
                                            "identifier": "getYTop",
                                            "node": "SimpleName"
                                          },
                                          "typeArguments": [],
                                          "expression": {
                                            "node": "MethodInvocation",
                                            "arguments": [],
                                            "name": {
                                              "identifier": "getCurve",
                                              "node": "SimpleName"
                                            },
                                            "typeArguments": [],
                                            "expression": {
                                              "node": "ArrayAccess",
                                              "array": {
                                                "identifier": "edgelist",
                                                "node": "SimpleName"
                                              },
                                              "index": {
                                                "identifier": "right",
                                                "node": "SimpleName"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "<",
                              "leftOperand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "numedges",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ForStatement",
                            "initializers": [
                              {
                                "node": "Assignment",
                                "operator": "=",
                                "leftHandSide": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                },
                                "rightHandSide": {
                                  "identifier": "left",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "<",
                              "leftOperand": {
                                "identifier": "cur",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "identifier": "right",
                                "node": "SimpleName"
                              }
                            },
                            "updaters": [
                              {
                                "node": "PostfixExpression",
                                "operator": "++",
                                "operand": {
                                  "identifier": "cur",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "body": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "identifier": "e",
                                      "node": "SimpleName"
                                    },
                                    "rightHandSide": {
                                      "node": "ArrayAccess",
                                      "array": {
                                        "identifier": "edgelist",
                                        "node": "SimpleName"
                                      },
                                      "index": {
                                        "identifier": "cur",
                                        "node": "SimpleName"
                                      }
                                    }
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "println",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "node": "QualifiedName",
                                      "qualifier": {
                                        "identifier": "System",
                                        "node": "SimpleName"
                                      },
                                      "name": {
                                        "identifier": "out",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "identifier": "e",
                                        "node": "SimpleName"
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                },
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "eq",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "name": {
                                          "identifier": "getEquivalence",
                                          "node": "SimpleName"
                                        },
                                        "expression": {
                                          "identifier": "e",
                                          "node": "SimpleName"
                                        },
                                        "node": "MethodInvocation",
                                        "arguments": [],
                                        "typeArguments": []
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "PrimitiveType",
                                    "primitiveTypeCode": "int"
                                  }
                                },
                                {
                                  "node": "IfStatement",
                                  "elseStatement": null,
                                  "thenStatement": {
                                    "node": "Block",
                                    "statements": [
                                      {
                                        "node": "ExpressionStatement",
                                        "expression": {
                                          "name": {
                                            "identifier": "println",
                                            "node": "SimpleName"
                                          },
                                          "expression": {
                                            "node": "QualifiedName",
                                            "qualifier": {
                                              "identifier": "System",
                                              "node": "SimpleName"
                                            },
                                            "name": {
                                              "identifier": "out",
                                              "node": "SimpleName"
                                            }
                                          },
                                          "node": "MethodInvocation",
                                          "arguments": [
                                            {
                                              "node": "InfixExpression",
                                              "operator": "+",
                                              "leftOperand": {
                                                "node": "InfixExpression",
                                                "operator": "+",
                                                "leftOperand": {
                                                  "node": "StringLiteral",
                                                  "escapedValue": "\"  was equal to \""
                                                },
                                                "rightOperand": {
                                                  "identifier": "eq",
                                                  "node": "SimpleName"
                                                }
                                              },
                                              "rightOperand": {
                                                "node": "StringLiteral",
                                                "escapedValue": "\"...\""
                                              }
                                            }
                                          ],
                                          "typeArguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "expression": {
                                    "node": "InfixExpression",
                                    "operator": "!=",
                                    "leftOperand": {
                                      "identifier": "eq",
                                      "node": "SimpleName"
                                    },
                                    "rightOperand": {
                                      "node": "NumberLiteral",
                                      "token": "0"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "!=",
                        "leftOperand": {
                          "name": {
                            "identifier": "getState",
                            "node": "SimpleName"
                          },
                          "expression": null,
                          "node": "MethodInvocation",
                          "arguments": [],
                          "typeArguments": []
                        },
                        "rightOperand": {
                          "node": "QualifiedName",
                          "qualifier": {
                            "identifier": "AreaOp",
                            "node": "SimpleName"
                          },
                          "name": {
                            "identifier": "RSTAG_OUTSIDE",
                            "node": "SimpleName"
                          }
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "println",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "node": "QualifiedName",
                                "qualifier": {
                                  "identifier": "System",
                                  "node": "SimpleName"
                                },
                                "name": {
                                  "identifier": "out",
                                  "node": "SimpleName"
                                }
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "node": "StringLiteral",
                                  "escapedValue": "\"new links:\""
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ForStatement",
                            "initializers": [
                              {
                                "node": "VariableDeclarationExpression",
                                "modifiers": [],
                                "fragments": [
                                  {
                                    "node": "VariableDeclarationFragment",
                                    "name": {
                                      "identifier": "i",
                                      "node": "SimpleName"
                                    },
                                    "extraDimensions": 0,
                                    "initializer": {
                                      "node": "NumberLiteral",
                                      "token": "0"
                                    }
                                  }
                                ],
                                "type": {
                                  "node": "PrimitiveType",
                                  "primitiveTypeCode": "int"
                                }
                              }
                            ],
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "<",
                              "leftOperand": {
                                "identifier": "i",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "name": {
                                  "identifier": "size",
                                  "node": "SimpleName"
                                },
                                "expression": {
                                  "identifier": "links",
                                  "node": "SimpleName"
                                },
                                "node": "MethodInvocation",
                                "arguments": [],
                                "typeArguments": []
                              }
                            },
                            "updaters": [
                              {
                                "node": "PostfixExpression",
                                "operator": "++",
                                "operand": {
                                  "identifier": "i",
                                  "node": "SimpleName"
                                }
                              }
                            ],
                            "body": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "link",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "node": "CastExpression",
                                        "type": {
                                          "node": "SimpleType",
                                          "name": {
                                            "identifier": "CurveLink",
                                            "node": "SimpleName"
                                          }
                                        },
                                        "expression": {
                                          "name": {
                                            "identifier": "elementAt",
                                            "node": "SimpleName"
                                          },
                                          "expression": {
                                            "identifier": "links",
                                            "node": "SimpleName"
                                          },
                                          "node": "MethodInvocation",
                                          "arguments": [
                                            {
                                              "identifier": "i",
                                              "node": "SimpleName"
                                            }
                                          ],
                                          "typeArguments": []
                                        }
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "CurveLink",
                                      "node": "SimpleName"
                                    }
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "println",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "node": "QualifiedName",
                                      "qualifier": {
                                        "identifier": "System",
                                        "node": "SimpleName"
                                      },
                                      "name": {
                                        "identifier": "out",
                                        "node": "SimpleName"
                                      }
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "node": "InfixExpression",
                                        "operator": "+",
                                        "leftOperand": {
                                          "node": "StringLiteral",
                                          "escapedValue": "\"  \""
                                        },
                                        "rightOperand": {
                                          "name": {
                                            "identifier": "getSubCurve",
                                            "node": "SimpleName"
                                          },
                                          "expression": {
                                            "identifier": "link",
                                            "node": "SimpleName"
                                          },
                                          "node": "MethodInvocation",
                                          "arguments": [],
                                          "typeArguments": []
                                        }
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "BooleanLiteral",
                        "booleanValue": false
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "resolveLinks",
                          "node": "SimpleName"
                        },
                        "expression": null,
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "identifier": "subcurves",
                            "node": "SimpleName"
                          },
                          {
                            "identifier": "chains",
                            "node": "SimpleName"
                          },
                          {
                            "identifier": "links",
                            "node": "SimpleName"
                          }
                        ],
                        "typeArguments": []
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "clear",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "links",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [],
                        "typeArguments": []
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "node": "ArrayAccess",
                          "array": {
                            "identifier": "yrange",
                            "node": "SimpleName"
                          },
                          "index": {
                            "node": "NumberLiteral",
                            "token": "0"
                          }
                        },
                        "rightHandSide": {
                          "identifier": "yend",
                          "node": "SimpleName"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "finalizeSubCurves",
                    "node": "SimpleName"
                  },
                  "expression": null,
                  "node": "MethodInvocation",
                  "arguments": [
                    {
                      "identifier": "subcurves",
                      "node": "SimpleName"
                    },
                    {
                      "identifier": "chains",
                      "node": "SimpleName"
                    }
                  ],
                  "typeArguments": []
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "ret",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "arguments": [],
                      "anonymousClassDeclaration": null,
                      "node": "ClassInstanceCreation",
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "Vector",
                          "node": "SimpleName"
                        }
                      },
                      "typeArguments": [],
                      "expression": null
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Vector",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "enum_",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "name": {
                        "identifier": "elements",
                        "node": "SimpleName"
                      },
                      "expression": {
                        "identifier": "subcurves",
                        "node": "SimpleName"
                      },
                      "node": "MethodInvocation",
                      "arguments": [],
                      "typeArguments": []
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "Enumeration",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "WhileStatement",
                "expression": {
                  "name": {
                    "identifier": "hasMoreElements",
                    "node": "SimpleName"
                  },
                  "expression": {
                    "identifier": "enum_",
                    "node": "SimpleName"
                  },
                  "node": "MethodInvocation",
                  "arguments": [],
                  "typeArguments": []
                },
                "body": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "link",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "CastExpression",
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "CurveLink",
                                "node": "SimpleName"
                              }
                            },
                            "expression": {
                              "name": {
                                "identifier": "nextElement",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "enum_",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [],
                              "typeArguments": []
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "CurveLink",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "add",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "ret",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "name": {
                              "identifier": "getMoveto",
                              "node": "SimpleName"
                            },
                            "expression": {
                              "identifier": "link",
                              "node": "SimpleName"
                            },
                            "node": "MethodInvocation",
                            "arguments": [],
                            "typeArguments": []
                          }
                        ],
                        "typeArguments": []
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "nextlink",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "identifier": "link",
                            "node": "SimpleName"
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "CurveLink",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "WhileStatement",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "!=",
                        "leftOperand": {
                          "node": "ParenthesizedExpression",
                          "expression": {
                            "node": "Assignment",
                            "operator": "=",
                            "leftHandSide": {
                              "identifier": "nextlink",
                              "node": "SimpleName"
                            },
                            "rightHandSide": {
                              "name": {
                                "identifier": "getNext",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "nextlink",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [],
                              "typeArguments": []
                            }
                          }
                        },
                        "rightOperand": {
                          "node": "NullLiteral"
                        }
                      },
                      "body": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "add",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "ret",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "name": {
                                          "identifier": "getSubCurve",
                                          "node": "SimpleName"
                                        },
                                        "expression": {
                                          "identifier": "link",
                                          "node": "SimpleName"
                                        },
                                        "node": "MethodInvocation",
                                        "arguments": [],
                                        "typeArguments": []
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "identifier": "link",
                                      "node": "SimpleName"
                                    },
                                    "rightHandSide": {
                                      "identifier": "nextlink",
                                      "node": "SimpleName"
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "PrefixExpression",
                              "operator": "!",
                              "operand": {
                                "name": {
                                  "identifier": "absorb",
                                  "node": "SimpleName"
                                },
                                "expression": {
                                  "identifier": "link",
                                  "node": "SimpleName"
                                },
                                "node": "MethodInvocation",
                                "arguments": [
                                  {
                                    "identifier": "nextlink",
                                    "node": "SimpleName"
                                  }
                                ],
                                "typeArguments": []
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "add",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "ret",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "name": {
                              "identifier": "getSubCurve",
                              "node": "SimpleName"
                            },
                            "expression": {
                              "identifier": "link",
                              "node": "SimpleName"
                            },
                            "node": "MethodInvocation",
                            "arguments": [],
                            "typeArguments": []
                          }
                        ],
                        "typeArguments": []
                      }
                    }
                  ]
                }
              },
              {
                "node": "ReturnStatement",
                "expression": {
                  "identifier": "ret",
                  "node": "SimpleName"
                }
              }
            ]
          },
          "constructor": false,
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "SimpleType",
            "name": {
              "identifier": "Vector",
              "node": "SimpleName"
            }
          },
          "name": {
            "identifier": "pruneEdges",
            "node": "SimpleName"
          },
          "typeParameters": [],
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "private"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "subcurves",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "chains",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "body": {
            "node": "Block",
            "statements": [
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "numchains",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "name": {
                        "identifier": "size",
                        "node": "SimpleName"
                      },
                      "expression": {
                        "identifier": "chains",
                        "node": "SimpleName"
                      },
                      "node": "MethodInvocation",
                      "arguments": [],
                      "typeArguments": []
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": null,
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ReturnStatement",
                      "expression": null
                    }
                  ]
                },
                "expression": {
                  "node": "InfixExpression",
                  "operator": "==",
                  "leftOperand": {
                    "identifier": "numchains",
                    "node": "SimpleName"
                  },
                  "rightOperand": {
                    "node": "NumberLiteral",
                    "token": "0"
                  }
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": null,
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ThrowStatement",
                      "expression": {
                        "arguments": [
                          {
                            "node": "StringLiteral",
                            "escapedValue": "\"Odd number of chains!\""
                          }
                        ],
                        "anonymousClassDeclaration": null,
                        "node": "ClassInstanceCreation",
                        "type": {
                          "node": "SimpleType",
                          "name": {
                            "identifier": "InternalError",
                            "node": "SimpleName"
                          }
                        },
                        "typeArguments": [],
                        "expression": null
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "InfixExpression",
                  "operator": "!=",
                  "leftOperand": {
                    "node": "ParenthesizedExpression",
                    "expression": {
                      "node": "InfixExpression",
                      "operator": "&",
                      "leftOperand": {
                        "identifier": "numchains",
                        "node": "SimpleName"
                      },
                      "rightOperand": {
                        "node": "NumberLiteral",
                        "token": "1"
                      }
                    }
                  },
                  "rightOperand": {
                    "node": "NumberLiteral",
                    "token": "0"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "endlist",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "ArrayCreation",
                      "type": {
                        "node": "ArrayType",
                        "componentType": {
                          "node": "SimpleType",
                          "name": {
                            "identifier": "ChainEnd",
                            "node": "SimpleName"
                          }
                        }
                      },
                      "initializer": null,
                      "dimensions": [
                        {
                          "identifier": "numchains",
                          "node": "SimpleName"
                        }
                      ]
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "ArrayType",
                  "componentType": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "ChainEnd",
                      "node": "SimpleName"
                    }
                  }
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "toArray",
                    "node": "SimpleName"
                  },
                  "expression": {
                    "identifier": "chains",
                    "node": "SimpleName"
                  },
                  "node": "MethodInvocation",
                  "arguments": [
                    {
                      "identifier": "endlist",
                      "node": "SimpleName"
                    }
                  ],
                  "typeArguments": []
                }
              },
              {
                "node": "ForStatement",
                "initializers": [
                  {
                    "node": "VariableDeclarationExpression",
                    "modifiers": [],
                    "fragments": [
                      {
                        "node": "VariableDeclarationFragment",
                        "name": {
                          "identifier": "i",
                          "node": "SimpleName"
                        },
                        "extraDimensions": 0,
                        "initializer": {
                          "node": "NumberLiteral",
                          "token": "1"
                        }
                      }
                    ],
                    "type": {
                      "node": "PrimitiveType",
                      "primitiveTypeCode": "int"
                    }
                  }
                ],
                "expression": {
                  "node": "InfixExpression",
                  "operator": "<",
                  "leftOperand": {
                    "identifier": "i",
                    "node": "SimpleName"
                  },
                  "rightOperand": {
                    "identifier": "numchains",
                    "node": "SimpleName"
                  }
                },
                "updaters": [
                  {
                    "node": "Assignment",
                    "operator": "+=",
                    "leftHandSide": {
                      "identifier": "i",
                      "node": "SimpleName"
                    },
                    "rightHandSide": {
                      "node": "NumberLiteral",
                      "token": "2"
                    }
                  }
                ],
                "body": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "open",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ArrayAccess",
                            "array": {
                              "identifier": "endlist",
                              "node": "SimpleName"
                            },
                            "index": {
                              "node": "InfixExpression",
                              "operator": "-",
                              "leftOperand": {
                                "identifier": "i",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NumberLiteral",
                                "token": "1"
                              }
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "ChainEnd",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "close",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ArrayAccess",
                            "array": {
                              "identifier": "endlist",
                              "node": "SimpleName"
                            },
                            "index": {
                              "identifier": "i",
                              "node": "SimpleName"
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "ChainEnd",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "subcurve",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "name": {
                              "identifier": "linkTo",
                              "node": "SimpleName"
                            },
                            "expression": {
                              "identifier": "open",
                              "node": "SimpleName"
                            },
                            "node": "MethodInvocation",
                            "arguments": [
                              {
                                "identifier": "close",
                                "node": "SimpleName"
                              }
                            ],
                            "typeArguments": []
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "SimpleType",
                        "name": {
                          "identifier": "CurveLink",
                          "node": "SimpleName"
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "add",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "subcurves",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "identifier": "subcurve",
                                  "node": "SimpleName"
                                }
                              ],
                              "typeArguments": []
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "!=",
                        "leftOperand": {
                          "identifier": "subcurve",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "node": "NullLiteral"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "clear",
                    "node": "SimpleName"
                  },
                  "expression": {
                    "identifier": "chains",
                    "node": "SimpleName"
                  },
                  "node": "MethodInvocation",
                  "arguments": [],
                  "typeArguments": []
                }
              }
            ]
          },
          "extraDimensions": 0,
          "typeParameters": [],
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "void"
          },
          "name": {
            "identifier": "finalizeSubCurves",
            "node": "SimpleName"
          },
          "constructor": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "EmptyLinkList",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "ArrayCreation",
                "type": {
                  "node": "ArrayType",
                  "componentType": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "CurveLink",
                      "node": "SimpleName"
                    }
                  }
                },
                "initializer": null,
                "dimensions": [
                  {
                    "node": "NumberLiteral",
                    "token": "2"
                  }
                ]
              }
            }
          ],
          "type": {
            "node": "ArrayType",
            "componentType": {
              "node": "SimpleType",
              "name": {
                "identifier": "CurveLink",
                "node": "SimpleName"
              }
            }
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "private"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "node": "FieldDeclaration",
          "fragments": [
            {
              "node": "VariableDeclarationFragment",
              "name": {
                "identifier": "EmptyChainList",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "initializer": {
                "node": "ArrayCreation",
                "type": {
                  "node": "ArrayType",
                  "componentType": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "ChainEnd",
                      "node": "SimpleName"
                    }
                  }
                },
                "initializer": null,
                "dimensions": [
                  {
                    "node": "NumberLiteral",
                    "token": "2"
                  }
                ]
              }
            }
          ],
          "type": {
            "node": "ArrayType",
            "componentType": {
              "node": "SimpleType",
              "name": {
                "identifier": "ChainEnd",
                "node": "SimpleName"
              }
            }
          },
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "private"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "subcurves",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "chains",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "links",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "SimpleType",
                "name": {
                  "identifier": "Vector",
                  "node": "SimpleName"
                }
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "body": {
            "node": "Block",
            "statements": [
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "numlinks",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "name": {
                        "identifier": "size",
                        "node": "SimpleName"
                      },
                      "expression": {
                        "identifier": "links",
                        "node": "SimpleName"
                      },
                      "node": "MethodInvocation",
                      "arguments": [],
                      "typeArguments": []
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "linklist",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": null
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "ArrayType",
                  "componentType": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "CurveLink",
                      "node": "SimpleName"
                    }
                  }
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ThrowStatement",
                            "expression": {
                              "arguments": [
                                {
                                  "node": "StringLiteral",
                                  "escapedValue": "\"Odd number of new curves!\""
                                }
                              ],
                              "anonymousClassDeclaration": null,
                              "node": "ClassInstanceCreation",
                              "type": {
                                "node": "SimpleType",
                                "name": {
                                  "identifier": "InternalError",
                                  "node": "SimpleName"
                                }
                              },
                              "typeArguments": [],
                              "expression": null
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "!=",
                        "leftOperand": {
                          "node": "ParenthesizedExpression",
                          "expression": {
                            "node": "InfixExpression",
                            "operator": "&",
                            "leftOperand": {
                              "identifier": "numlinks",
                              "node": "SimpleName"
                            },
                            "rightOperand": {
                              "node": "NumberLiteral",
                              "token": "1"
                            }
                          }
                        },
                        "rightOperand": {
                          "node": "NumberLiteral",
                          "token": "0"
                        }
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "identifier": "linklist",
                          "node": "SimpleName"
                        },
                        "rightHandSide": {
                          "node": "ArrayCreation",
                          "type": {
                            "node": "ArrayType",
                            "componentType": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "CurveLink",
                                "node": "SimpleName"
                              }
                            }
                          },
                          "initializer": null,
                          "dimensions": [
                            {
                              "node": "InfixExpression",
                              "operator": "+",
                              "leftOperand": {
                                "identifier": "numlinks",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NumberLiteral",
                                "token": "2"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "toArray",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "links",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "identifier": "linklist",
                            "node": "SimpleName"
                          }
                        ],
                        "typeArguments": []
                      }
                    }
                  ]
                },
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "identifier": "linklist",
                          "node": "SimpleName"
                        },
                        "rightHandSide": {
                          "identifier": "EmptyLinkList",
                          "node": "SimpleName"
                        }
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "InfixExpression",
                  "operator": "==",
                  "leftOperand": {
                    "identifier": "numlinks",
                    "node": "SimpleName"
                  },
                  "rightOperand": {
                    "node": "NumberLiteral",
                    "token": "0"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "numchains",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "name": {
                        "identifier": "size",
                        "node": "SimpleName"
                      },
                      "expression": {
                        "identifier": "chains",
                        "node": "SimpleName"
                      },
                      "node": "MethodInvocation",
                      "arguments": [],
                      "typeArguments": []
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "endlist",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": null
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "ArrayType",
                  "componentType": {
                    "node": "SimpleType",
                    "name": {
                      "identifier": "ChainEnd",
                      "node": "SimpleName"
                    }
                  }
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ThrowStatement",
                            "expression": {
                              "arguments": [
                                {
                                  "node": "StringLiteral",
                                  "escapedValue": "\"Odd number of chains!\""
                                }
                              ],
                              "anonymousClassDeclaration": null,
                              "node": "ClassInstanceCreation",
                              "type": {
                                "node": "SimpleType",
                                "name": {
                                  "identifier": "InternalError",
                                  "node": "SimpleName"
                                }
                              },
                              "typeArguments": [],
                              "expression": null
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "!=",
                        "leftOperand": {
                          "node": "ParenthesizedExpression",
                          "expression": {
                            "node": "InfixExpression",
                            "operator": "&",
                            "leftOperand": {
                              "identifier": "numchains",
                              "node": "SimpleName"
                            },
                            "rightOperand": {
                              "node": "NumberLiteral",
                              "token": "1"
                            }
                          }
                        },
                        "rightOperand": {
                          "node": "NumberLiteral",
                          "token": "0"
                        }
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "identifier": "endlist",
                          "node": "SimpleName"
                        },
                        "rightHandSide": {
                          "node": "ArrayCreation",
                          "type": {
                            "node": "ArrayType",
                            "componentType": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "ChainEnd",
                                "node": "SimpleName"
                              }
                            }
                          },
                          "initializer": null,
                          "dimensions": [
                            {
                              "node": "InfixExpression",
                              "operator": "+",
                              "leftOperand": {
                                "identifier": "numchains",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NumberLiteral",
                                "token": "2"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "toArray",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "chains",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "identifier": "endlist",
                            "node": "SimpleName"
                          }
                        ],
                        "typeArguments": []
                      }
                    }
                  ]
                },
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "node": "Assignment",
                        "operator": "=",
                        "leftHandSide": {
                          "identifier": "endlist",
                          "node": "SimpleName"
                        },
                        "rightHandSide": {
                          "identifier": "EmptyChainList",
                          "node": "SimpleName"
                        }
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "InfixExpression",
                  "operator": "==",
                  "leftOperand": {
                    "identifier": "numchains",
                    "node": "SimpleName"
                  },
                  "rightOperand": {
                    "node": "NumberLiteral",
                    "token": "0"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "curchain",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "NumberLiteral",
                      "token": "0"
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "curlink",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "NumberLiteral",
                      "token": "0"
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "PrimitiveType",
                  "primitiveTypeCode": "int"
                }
              },
              {
                "node": "ExpressionStatement",
                "expression": {
                  "name": {
                    "identifier": "clear",
                    "node": "SimpleName"
                  },
                  "expression": {
                    "identifier": "chains",
                    "node": "SimpleName"
                  },
                  "node": "MethodInvocation",
                  "arguments": [],
                  "typeArguments": []
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "chain",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "ArrayAccess",
                      "array": {
                        "identifier": "endlist",
                        "node": "SimpleName"
                      },
                      "index": {
                        "node": "NumberLiteral",
                        "token": "0"
                      }
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "ChainEnd",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "nextchain",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "ArrayAccess",
                      "array": {
                        "identifier": "endlist",
                        "node": "SimpleName"
                      },
                      "index": {
                        "node": "NumberLiteral",
                        "token": "1"
                      }
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "ChainEnd",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "link",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "ArrayAccess",
                      "array": {
                        "identifier": "linklist",
                        "node": "SimpleName"
                      },
                      "index": {
                        "node": "NumberLiteral",
                        "token": "0"
                      }
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "CurveLink",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "VariableDeclarationStatement",
                "fragments": [
                  {
                    "node": "VariableDeclarationFragment",
                    "name": {
                      "identifier": "nextlink",
                      "node": "SimpleName"
                    },
                    "extraDimensions": 0,
                    "initializer": {
                      "node": "ArrayAccess",
                      "array": {
                        "identifier": "linklist",
                        "node": "SimpleName"
                      },
                      "index": {
                        "node": "NumberLiteral",
                        "token": "1"
                      }
                    }
                  }
                ],
                "modifiers": [],
                "type": {
                  "node": "SimpleType",
                  "name": {
                    "identifier": "CurveLink",
                    "node": "SimpleName"
                  }
                }
              },
              {
                "node": "WhileStatement",
                "expression": {
                  "node": "InfixExpression",
                  "operator": "||",
                  "leftOperand": {
                    "node": "InfixExpression",
                    "operator": "!=",
                    "leftOperand": {
                      "identifier": "chain",
                      "node": "SimpleName"
                    },
                    "rightOperand": {
                      "node": "NullLiteral"
                    }
                  },
                  "rightOperand": {
                    "node": "InfixExpression",
                    "operator": "!=",
                    "leftOperand": {
                      "identifier": "link",
                      "node": "SimpleName"
                    },
                    "rightOperand": {
                      "node": "NullLiteral"
                    }
                  }
                },
                "body": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "connectchains",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ParenthesizedExpression",
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "==",
                              "leftOperand": {
                                "identifier": "link",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NullLiteral"
                              }
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "boolean"
                      }
                    },
                    {
                      "node": "VariableDeclarationStatement",
                      "fragments": [
                        {
                          "node": "VariableDeclarationFragment",
                          "name": {
                            "identifier": "connectlinks",
                            "node": "SimpleName"
                          },
                          "extraDimensions": 0,
                          "initializer": {
                            "node": "ParenthesizedExpression",
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "==",
                              "leftOperand": {
                                "identifier": "chain",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NullLiteral"
                              }
                            }
                          }
                        }
                      ],
                      "modifiers": [],
                      "type": {
                        "node": "PrimitiveType",
                        "primitiveTypeCode": "boolean"
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "connectchains",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ParenthesizedExpression",
                                "expression": {
                                  "node": "InfixExpression",
                                  "operator": "&&",
                                  "leftOperand": {
                                    "node": "InfixExpression",
                                    "operator": "==",
                                    "leftOperand": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "InfixExpression",
                                        "operator": "&",
                                        "leftOperand": {
                                          "identifier": "curchain",
                                          "node": "SimpleName"
                                        },
                                        "rightOperand": {
                                          "node": "NumberLiteral",
                                          "token": "1"
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "NumberLiteral",
                                      "token": "0"
                                    }
                                  },
                                  "rightOperand": {
                                    "node": "InfixExpression",
                                    "operator": "==",
                                    "leftOperand": {
                                      "name": {
                                        "identifier": "getX",
                                        "node": "SimpleName"
                                      },
                                      "expression": {
                                        "identifier": "chain",
                                        "node": "SimpleName"
                                      },
                                      "node": "MethodInvocation",
                                      "arguments": [],
                                      "typeArguments": []
                                    },
                                    "rightOperand": {
                                      "name": {
                                        "identifier": "getX",
                                        "node": "SimpleName"
                                      },
                                      "expression": {
                                        "identifier": "nextchain",
                                        "node": "SimpleName"
                                      },
                                      "node": "MethodInvocation",
                                      "arguments": [],
                                      "typeArguments": []
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "connectlinks",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ParenthesizedExpression",
                                "expression": {
                                  "node": "InfixExpression",
                                  "operator": "&&",
                                  "leftOperand": {
                                    "node": "InfixExpression",
                                    "operator": "==",
                                    "leftOperand": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "InfixExpression",
                                        "operator": "&",
                                        "leftOperand": {
                                          "identifier": "curlink",
                                          "node": "SimpleName"
                                        },
                                        "rightOperand": {
                                          "node": "NumberLiteral",
                                          "token": "1"
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "node": "NumberLiteral",
                                      "token": "0"
                                    }
                                  },
                                  "rightOperand": {
                                    "node": "InfixExpression",
                                    "operator": "==",
                                    "leftOperand": {
                                      "name": {
                                        "identifier": "getX",
                                        "node": "SimpleName"
                                      },
                                      "expression": {
                                        "identifier": "link",
                                        "node": "SimpleName"
                                      },
                                      "node": "MethodInvocation",
                                      "arguments": [],
                                      "typeArguments": []
                                    },
                                    "rightOperand": {
                                      "name": {
                                        "identifier": "getX",
                                        "node": "SimpleName"
                                      },
                                      "expression": {
                                        "identifier": "nextlink",
                                        "node": "SimpleName"
                                      },
                                      "node": "MethodInvocation",
                                      "arguments": [],
                                      "typeArguments": []
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "cx",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "name": {
                                          "identifier": "getX",
                                          "node": "SimpleName"
                                        },
                                        "expression": {
                                          "identifier": "chain",
                                          "node": "SimpleName"
                                        },
                                        "node": "MethodInvocation",
                                        "arguments": [],
                                        "typeArguments": []
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "PrimitiveType",
                                    "primitiveTypeCode": "double"
                                  }
                                },
                                {
                                  "node": "VariableDeclarationStatement",
                                  "fragments": [
                                    {
                                      "node": "VariableDeclarationFragment",
                                      "name": {
                                        "identifier": "lx",
                                        "node": "SimpleName"
                                      },
                                      "extraDimensions": 0,
                                      "initializer": {
                                        "name": {
                                          "identifier": "getX",
                                          "node": "SimpleName"
                                        },
                                        "expression": {
                                          "identifier": "link",
                                          "node": "SimpleName"
                                        },
                                        "node": "MethodInvocation",
                                        "arguments": [],
                                        "typeArguments": []
                                      }
                                    }
                                  ],
                                  "modifiers": [],
                                  "type": {
                                    "node": "PrimitiveType",
                                    "primitiveTypeCode": "double"
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "identifier": "connectchains",
                                      "node": "SimpleName"
                                    },
                                    "rightHandSide": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "InfixExpression",
                                        "operator": "&&",
                                        "leftOperand": {
                                          "node": "InfixExpression",
                                          "operator": "&&",
                                          "leftOperand": {
                                            "node": "InfixExpression",
                                            "operator": "!=",
                                            "leftOperand": {
                                              "identifier": "nextchain",
                                              "node": "SimpleName"
                                            },
                                            "rightOperand": {
                                              "node": "NullLiteral"
                                            }
                                          },
                                          "rightOperand": {
                                            "node": "InfixExpression",
                                            "operator": "<",
                                            "leftOperand": {
                                              "identifier": "cx",
                                              "node": "SimpleName"
                                            },
                                            "rightOperand": {
                                              "identifier": "lx",
                                              "node": "SimpleName"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "name": {
                                            "identifier": "obstructs",
                                            "node": "SimpleName"
                                          },
                                          "expression": null,
                                          "node": "MethodInvocation",
                                          "arguments": [
                                            {
                                              "name": {
                                                "identifier": "getX",
                                                "node": "SimpleName"
                                              },
                                              "expression": {
                                                "identifier": "nextchain",
                                                "node": "SimpleName"
                                              },
                                              "node": "MethodInvocation",
                                              "arguments": [],
                                              "typeArguments": []
                                            },
                                            {
                                              "identifier": "lx",
                                              "node": "SimpleName"
                                            },
                                            {
                                              "identifier": "curchain",
                                              "node": "SimpleName"
                                            }
                                          ],
                                          "typeArguments": []
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "node": "Assignment",
                                    "operator": "=",
                                    "leftHandSide": {
                                      "identifier": "connectlinks",
                                      "node": "SimpleName"
                                    },
                                    "rightHandSide": {
                                      "node": "ParenthesizedExpression",
                                      "expression": {
                                        "node": "InfixExpression",
                                        "operator": "&&",
                                        "leftOperand": {
                                          "node": "InfixExpression",
                                          "operator": "&&",
                                          "leftOperand": {
                                            "node": "InfixExpression",
                                            "operator": "!=",
                                            "leftOperand": {
                                              "identifier": "nextlink",
                                              "node": "SimpleName"
                                            },
                                            "rightOperand": {
                                              "node": "NullLiteral"
                                            }
                                          },
                                          "rightOperand": {
                                            "node": "InfixExpression",
                                            "operator": "<",
                                            "leftOperand": {
                                              "identifier": "lx",
                                              "node": "SimpleName"
                                            },
                                            "rightOperand": {
                                              "identifier": "cx",
                                              "node": "SimpleName"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "name": {
                                            "identifier": "obstructs",
                                            "node": "SimpleName"
                                          },
                                          "expression": null,
                                          "node": "MethodInvocation",
                                          "arguments": [
                                            {
                                              "name": {
                                                "identifier": "getX",
                                                "node": "SimpleName"
                                              },
                                              "expression": {
                                                "identifier": "nextlink",
                                                "node": "SimpleName"
                                              },
                                              "node": "MethodInvocation",
                                              "arguments": [],
                                              "typeArguments": []
                                            },
                                            {
                                              "identifier": "cx",
                                              "node": "SimpleName"
                                            },
                                            {
                                              "identifier": "curlink",
                                              "node": "SimpleName"
                                            }
                                          ],
                                          "typeArguments": []
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "&&",
                              "leftOperand": {
                                "node": "PrefixExpression",
                                "operator": "!",
                                "operand": {
                                  "identifier": "connectchains",
                                  "node": "SimpleName"
                                }
                              },
                              "rightOperand": {
                                "node": "PrefixExpression",
                                "operator": "!",
                                "operand": {
                                  "identifier": "connectlinks",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "&&",
                        "leftOperand": {
                          "node": "PrefixExpression",
                          "operator": "!",
                          "operand": {
                            "identifier": "connectchains",
                            "node": "SimpleName"
                          }
                        },
                        "rightOperand": {
                          "node": "PrefixExpression",
                          "operator": "!",
                          "operand": {
                            "identifier": "connectlinks",
                            "node": "SimpleName"
                          }
                        }
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "subcurve",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": {
                                  "name": {
                                    "identifier": "linkTo",
                                    "node": "SimpleName"
                                  },
                                  "expression": {
                                    "identifier": "chain",
                                    "node": "SimpleName"
                                  },
                                  "node": "MethodInvocation",
                                  "arguments": [
                                    {
                                      "identifier": "nextchain",
                                      "node": "SimpleName"
                                    }
                                  ],
                                  "typeArguments": []
                                }
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "CurveLink",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "IfStatement",
                            "elseStatement": null,
                            "thenStatement": {
                              "node": "Block",
                              "statements": [
                                {
                                  "node": "ExpressionStatement",
                                  "expression": {
                                    "name": {
                                      "identifier": "add",
                                      "node": "SimpleName"
                                    },
                                    "expression": {
                                      "identifier": "subcurves",
                                      "node": "SimpleName"
                                    },
                                    "node": "MethodInvocation",
                                    "arguments": [
                                      {
                                        "identifier": "subcurve",
                                        "node": "SimpleName"
                                      }
                                    ],
                                    "typeArguments": []
                                  }
                                }
                              ]
                            },
                            "expression": {
                              "node": "InfixExpression",
                              "operator": "!=",
                              "leftOperand": {
                                "identifier": "subcurve",
                                "node": "SimpleName"
                              },
                              "rightOperand": {
                                "node": "NullLiteral"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "+=",
                              "leftHandSide": {
                                "identifier": "curchain",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "NumberLiteral",
                                "token": "2"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "chain",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "endlist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "curchain",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "nextchain",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "endlist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "identifier": "curchain",
                                    "node": "SimpleName"
                                  },
                                  "rightOperand": {
                                    "node": "NumberLiteral",
                                    "token": "1"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "expression": {
                        "identifier": "connectchains",
                        "node": "SimpleName"
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "openend",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": {
                                  "arguments": [
                                    {
                                      "identifier": "link",
                                      "node": "SimpleName"
                                    },
                                    {
                                      "node": "NullLiteral"
                                    }
                                  ],
                                  "anonymousClassDeclaration": null,
                                  "node": "ClassInstanceCreation",
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "ChainEnd",
                                      "node": "SimpleName"
                                    }
                                  },
                                  "typeArguments": [],
                                  "expression": null
                                }
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "ChainEnd",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "VariableDeclarationStatement",
                            "fragments": [
                              {
                                "node": "VariableDeclarationFragment",
                                "name": {
                                  "identifier": "closeend",
                                  "node": "SimpleName"
                                },
                                "extraDimensions": 0,
                                "initializer": {
                                  "arguments": [
                                    {
                                      "identifier": "nextlink",
                                      "node": "SimpleName"
                                    },
                                    {
                                      "identifier": "openend",
                                      "node": "SimpleName"
                                    }
                                  ],
                                  "anonymousClassDeclaration": null,
                                  "node": "ClassInstanceCreation",
                                  "type": {
                                    "node": "SimpleType",
                                    "name": {
                                      "identifier": "ChainEnd",
                                      "node": "SimpleName"
                                    }
                                  },
                                  "typeArguments": [],
                                  "expression": null
                                }
                              }
                            ],
                            "modifiers": [],
                            "type": {
                              "node": "SimpleType",
                              "name": {
                                "identifier": "ChainEnd",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "setOtherEnd",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "openend",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "identifier": "closeend",
                                  "node": "SimpleName"
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "add",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "chains",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "identifier": "openend",
                                  "node": "SimpleName"
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "add",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "chains",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "identifier": "closeend",
                                  "node": "SimpleName"
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "+=",
                              "leftHandSide": {
                                "identifier": "curlink",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "NumberLiteral",
                                "token": "2"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "link",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "linklist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "identifier": "curlink",
                                  "node": "SimpleName"
                                }
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "nextlink",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "linklist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "identifier": "curlink",
                                    "node": "SimpleName"
                                  },
                                  "rightOperand": {
                                    "node": "NumberLiteral",
                                    "token": "1"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "expression": {
                        "identifier": "connectlinks",
                        "node": "SimpleName"
                      }
                    },
                    {
                      "node": "IfStatement",
                      "elseStatement": null,
                      "thenStatement": {
                        "node": "Block",
                        "statements": [
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "addLink",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "chain",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "identifier": "link",
                                  "node": "SimpleName"
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "name": {
                                "identifier": "add",
                                "node": "SimpleName"
                              },
                              "expression": {
                                "identifier": "chains",
                                "node": "SimpleName"
                              },
                              "node": "MethodInvocation",
                              "arguments": [
                                {
                                  "identifier": "chain",
                                  "node": "SimpleName"
                                }
                              ],
                              "typeArguments": []
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "PostfixExpression",
                              "operator": "++",
                              "operand": {
                                "identifier": "curchain",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "chain",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "identifier": "nextchain",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "nextchain",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "endlist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "identifier": "curchain",
                                    "node": "SimpleName"
                                  },
                                  "rightOperand": {
                                    "node": "NumberLiteral",
                                    "token": "1"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "PostfixExpression",
                              "operator": "++",
                              "operand": {
                                "identifier": "curlink",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "link",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "identifier": "nextlink",
                                "node": "SimpleName"
                              }
                            }
                          },
                          {
                            "node": "ExpressionStatement",
                            "expression": {
                              "node": "Assignment",
                              "operator": "=",
                              "leftHandSide": {
                                "identifier": "nextlink",
                                "node": "SimpleName"
                              },
                              "rightHandSide": {
                                "node": "ArrayAccess",
                                "array": {
                                  "identifier": "linklist",
                                  "node": "SimpleName"
                                },
                                "index": {
                                  "node": "InfixExpression",
                                  "operator": "+",
                                  "leftOperand": {
                                    "identifier": "curlink",
                                    "node": "SimpleName"
                                  },
                                  "rightOperand": {
                                    "node": "NumberLiteral",
                                    "token": "1"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "&&",
                        "leftOperand": {
                          "node": "PrefixExpression",
                          "operator": "!",
                          "operand": {
                            "identifier": "connectchains",
                            "node": "SimpleName"
                          }
                        },
                        "rightOperand": {
                          "node": "PrefixExpression",
                          "operator": "!",
                          "operand": {
                            "identifier": "connectlinks",
                            "node": "SimpleName"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "node": "IfStatement",
                "elseStatement": null,
                "thenStatement": {
                  "node": "Block",
                  "statements": [
                    {
                      "node": "ExpressionStatement",
                      "expression": {
                        "name": {
                          "identifier": "println",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "node": "QualifiedName",
                          "qualifier": {
                            "identifier": "System",
                            "node": "SimpleName"
                          },
                          "name": {
                            "identifier": "out",
                            "node": "SimpleName"
                          }
                        },
                        "node": "MethodInvocation",
                        "arguments": [
                          {
                            "node": "StringLiteral",
                            "escapedValue": "\"Odd number of chains!\""
                          }
                        ],
                        "typeArguments": []
                      }
                    }
                  ]
                },
                "expression": {
                  "node": "InfixExpression",
                  "operator": "!=",
                  "leftOperand": {
                    "node": "ParenthesizedExpression",
                    "expression": {
                      "node": "InfixExpression",
                      "operator": "&",
                      "leftOperand": {
                        "name": {
                          "identifier": "size",
                          "node": "SimpleName"
                        },
                        "expression": {
                          "identifier": "chains",
                          "node": "SimpleName"
                        },
                        "node": "MethodInvocation",
                        "arguments": [],
                        "typeArguments": []
                      },
                      "rightOperand": {
                        "node": "NumberLiteral",
                        "token": "1"
                      }
                    }
                  },
                  "rightOperand": {
                    "node": "NumberLiteral",
                    "token": "0"
                  }
                }
              }
            ]
          },
          "extraDimensions": 0,
          "typeParameters": [],
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "void"
          },
          "name": {
            "identifier": "resolveLinks",
            "node": "SimpleName"
          },
          "constructor": false,
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        },
        {
          "parameters": [
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "v1",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "double"
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "v2",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "double"
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            },
            {
              "node": "SingleVariableDeclaration",
              "name": {
                "identifier": "phase",
                "node": "SimpleName"
              },
              "extraDimensions": 0,
              "type": {
                "node": "PrimitiveType",
                "primitiveTypeCode": "int"
              },
              "modifiers": [],
              "varargs": false,
              "initializer": null
            }
          ],
          "thrownExceptions": [],
          "extraDimensions": 0,
          "body": {
            "node": "Block",
            "statements": [
              {
                "node": "ReturnStatement",
                "expression": {
                  "node": "ParenthesizedExpression",
                  "expression": {
                    "node": "ConditionalExpression",
                    "expression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "==",
                        "leftOperand": {
                          "node": "ParenthesizedExpression",
                          "expression": {
                            "node": "InfixExpression",
                            "operator": "&",
                            "leftOperand": {
                              "identifier": "phase",
                              "node": "SimpleName"
                            },
                            "rightOperand": {
                              "node": "NumberLiteral",
                              "token": "1"
                            }
                          }
                        },
                        "rightOperand": {
                          "node": "NumberLiteral",
                          "token": "0"
                        }
                      }
                    },
                    "thenExpression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<=",
                        "leftOperand": {
                          "identifier": "v1",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "v2",
                          "node": "SimpleName"
                        }
                      }
                    },
                    "elseExpression": {
                      "node": "ParenthesizedExpression",
                      "expression": {
                        "node": "InfixExpression",
                        "operator": "<",
                        "leftOperand": {
                          "identifier": "v1",
                          "node": "SimpleName"
                        },
                        "rightOperand": {
                          "identifier": "v2",
                          "node": "SimpleName"
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "constructor": false,
          "node": "MethodDeclaration",
          "returnType2": {
            "node": "PrimitiveType",
            "primitiveTypeCode": "boolean"
          },
          "name": {
            "identifier": "obstructs",
            "node": "SimpleName"
          },
          "typeParameters": [],
          "modifiers": [
            {
              "node": "Modifier",
              "keyword": "public"
            },
            {
              "node": "Modifier",
              "keyword": "static"
            }
          ]
        }
      ],
      "typeParameters": [],
      "interface": false,
      "modifiers": [
        {
          "node": "Modifier",
          "keyword": "public"
        },
        {
          "node": "Modifier",
          "keyword": "abstract"
        }
      ]
    }
  ],
  "package": {
    "node": "PackageDeclaration",
    "name": {
      "node": "QualifiedName",
      "qualifier": {
        "node": "QualifiedName",
        "qualifier": {
          "identifier": "sun",
          "node": "SimpleName"
        },
        "name": {
          "identifier": "awt",
          "node": "SimpleName"
        }
      },
      "name": {
        "identifier": "geom",
        "node": "SimpleName"
      }
    },
    "annotations": []
  },
  "imports": [
    {
      "node": "ImportDeclaration",
      "name": {
        "node": "QualifiedName",
        "qualifier": {
          "node": "QualifiedName",
          "qualifier": {
            "identifier": "java",
            "node": "SimpleName"
          },
          "name": {
            "identifier": "util",
            "node": "SimpleName"
          }
        },
        "name": {
          "identifier": "Vector",
          "node": "SimpleName"
        }
      },
      "static": false,
      "onDemand": false
    },
    {
      "node": "ImportDeclaration",
      "name": {
        "node": "QualifiedName",
        "qualifier": {
          "node": "QualifiedName",
          "qualifier": {
            "identifier": "java",
            "node": "SimpleName"
          },
          "name": {
            "identifier": "util",
            "node": "SimpleName"
          }
        },
        "name": {
          "identifier": "Enumeration",
          "node": "SimpleName"
        }
      },
      "static": false,
      "onDemand": false
    },
    {
      "node": "ImportDeclaration",
      "name": {
        "node": "QualifiedName",
        "qualifier": {
          "node": "QualifiedName",
          "qualifier": {
            "identifier": "java",
            "node": "SimpleName"
          },
          "name": {
            "identifier": "util",
            "node": "SimpleName"
          }
        },
        "name": {
          "identifier": "Comparator",
          "node": "SimpleName"
        }
      },
      "static": false,
      "onDemand": false
    },
    {
      "node": "ImportDeclaration",
      "name": {
        "node": "QualifiedName",
        "qualifier": {
          "node": "QualifiedName",
          "qualifier": {
            "identifier": "java",
            "node": "SimpleName"
          },
          "name": {
            "identifier": "util",
            "node": "SimpleName"
          }
        },
        "name": {
          "identifier": "Arrays",
          "node": "SimpleName"
        }
      },
      "static": false,
      "onDemand": false
    }
  ]
}